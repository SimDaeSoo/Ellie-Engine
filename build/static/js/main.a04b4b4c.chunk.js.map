{"version":3,"sources":["utils/index.ts","CreatorTag.tsx","SideNavigation.tsx","utils/Graphics.ts","utils/Map.ts","pages/TilemapWithBuffer.tsx","utils/CaveGenerator.ts","pages/CaveGenerate.tsx","utils/Tile.ts","pages/CaveGenerateWithTexture.tsx","utils/LiquidSimulator.ts","pages/LiquidSimulation.tsx","utils/Label.ts","pages/LiquidSimulation2.tsx","pages/LiquidStressTest.tsx","pages/LineIntersection.tsx","App.tsx","index.tsx"],"names":["updater","app","CreatorTag","style","position","bottom","right","color","backgroundColor","padding","className","href","SideNavigation","location","useLocation","history","useHistory","useState","toggle","setToggle","pathname","Sidebar","collapsible","width","height","overflow","zIndex","Sidenav","Header","top","Nav","Item","icon","Icon","onClick","e","stopPropagation","Body","marginTop","activeKey","onSelect","push","eventKey","disabled","preload","callback","a","assets","srcs","i","toString","padStart","src","loaded","asset","Promise","resolve","PIXI","shared","add","load","length","setRenderer","stage","removeAllListeners","removeChildren","resolution","window","devicePixelRatio","SCALE_MODE","NEAREST","MIPMAP_TEXTURES","OFF","STRICT_TEXTURE_CACHE","stats","Stats","innerWidth","innerHeight","sharedLoader","powerPreference","backgroundAlpha","autoStart","antialias","forceCanvas","preserveDrawingBuffer","view","dom","removeProperty","document","getElementById","appendChild","requestAnimationFrame","render","update","setUpdater","drawTiles","graphics","grid","tilesize","beginFill","y","x","drawRect","endFill","create","options","splitSize","density","block","liquid","arrayBuffer","ArrayBuffer","properties","Uint8Array","Float32Array","tileType","Math","random","size","Float64Array","byteLength","Error","arrayBufferGrid","Array","fill","map","gridY","gridX","merge","floor","baseY","offsetY","baseX","offsetX","TilemapWithBuffer","useEffect","ceil","Map","clear","addChild","countAliveNeighbours","aliveNeighbours","neighborX","neighborY","nextStep","afterGrid","deathLimit","birthLimit","alives","CaveGenerate","frames","stepCount","CaveGenerator","getTileNumber","topLeft","topRight","left","bottomLeft","bottomRight","getWaterTileNumber","waterLevel","min","CaveGenerateWithTexture","percentage","setPercentage","setAsset","hide","setHide","assetName","removeChild","tileContainer","tileSprites","sprite","from","cacheAsBitmap","opacity","transitionProperty","transitionDuration","textAlign","Progress","Line","percent","status","MIN_LIQUID_VALUE","MAX_COMPRESSION","MIN_FLOW","calculateVerticalFlowValue","remainingLiquid","destination","sum","MAX_LIQUID_VALUE","flow","tileDatas","diff","settled","settleCount","cell","startValue","remainingValue","max","LiquidSimulation","backgroundContainer","waterContainer","waterTileNumber","waterSprite","EMPTY","LiquidSimulator","texture","alpha","createLabel","text","labelContainer","labelBackground","label","fontSize","onTouch","targetTouches","clientX","clientY","spreadWater","LiquidSimulation2","removeEventListener","addEventListener","round","LiquidStressTest","LineIntersection","App","Container","id","exact","path","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a04b4b4c.chunk.js","sourcesContent":["import * as PIXI from 'pixi.js';\nimport Stats from 'stats.js';\n\nlet updater: () => void;\nlet app: PIXI.Application;\n\nasync function preload(\n  callback: (percentage: number, assetName: string) => void\n): Promise<void> {\n  const BASE_URL: string =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3000/Engine/build'\n      : 'https://simdaesoo.github.io/Engine/build';\n  const assets: Array<[string, string]> = [];\n  const srcs: Array<string> = [];\n\n  for (let i = 1; i <= 61; i++) {\n    srcs.push(`tiles/Tile_${i.toString().padStart(2, '0')}.png`);\n  }\n\n  for (let i = 0; i <= 36; i++) {\n    srcs.push(`waters/${i.toString().padStart(2, '0')}.png`);\n  }\n\n  for (const src of srcs) {\n    assets.push([src, `${BASE_URL}/${src}`]);\n  }\n\n  let loaded = 0;\n  for (const asset of assets) {\n    try {\n      await new Promise<void>((resolve) => {\n        PIXI.Loader.shared.add(...asset).load(() => {\n          resolve();\n        });\n      });\n    } catch (_e) {}\n    loaded++;\n    callback(loaded / assets.length, asset[0]);\n  }\n}\n\nfunction setRenderer(): PIXI.Application {\n  if (app) {\n    app.stage.removeAllListeners();\n    app.stage.removeChildren();\n    return app;\n  }\n  const resolution: number = window.devicePixelRatio || 1;\n  PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n  PIXI.settings.MIPMAP_TEXTURES = PIXI.MIPMAP_MODES.OFF;\n  PIXI.settings.STRICT_TEXTURE_CACHE = true;\n\n  const stats: Stats = new Stats();\n  app = new PIXI.Application({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    sharedLoader: true,\n    powerPreference: 'high-performance',\n    backgroundColor: 0x202020,\n    backgroundAlpha: 0,\n    autoStart: false,\n    antialias: false,\n    forceCanvas: false,\n    preserveDrawingBuffer: false,\n    resolution,\n  });\n  app.view.className = 'renderer';\n  app.view.style.width = '100%';\n  app.view.style.height = '100%';\n  stats.dom.style.right = '0';\n  stats.dom.style.removeProperty('left');\n\n  const dom: HTMLElement = document.getElementById('content') as HTMLElement;\n  dom.appendChild(app.view);\n  dom.appendChild(stats.dom);\n\n  const render = () => {\n    if (updater) updater();\n    stats.update();\n    app.render();\n    window.requestAnimationFrame(render);\n  };\n  window.requestAnimationFrame(render);\n\n  return app;\n}\n\nfunction setUpdater(callback: () => void): void {\n  updater = callback;\n}\n\nexport { setRenderer, setUpdater, preload };\n","const CreatorTag = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        color: '#FFFFFF',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        padding: '1px 4px',\n      }}\n      className='noselect'\n    >\n      <a href='https://github.com/SimDaeSoo'>Created by daesoo94</a>\n    </div>\n  );\n};\n\nexport default CreatorTag;\n","import { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Sidenav, Nav, Sidebar, Icon } from 'rsuite';\n\nconst SideNavigation = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [toggle, setToggle] = useState(true);\n  const { pathname } = location;\n\n  return (\n    <Sidebar\n      collapsible\n      width={toggle ? 0 : 250}\n      style={{\n        position: 'absolute',\n        height: '100%',\n        overflow: 'auto',\n        backgroundColor: '#1a1d24',\n        zIndex: 1,\n      }}\n    >\n      <Sidenav>\n        <Sidenav.Header\n          style={{\n            position: 'fixed',\n            top: 0,\n            height: '50px',\n            width: toggle ? 56 : 250,\n            zIndex: 2,\n          }}\n        >\n          <Nav>\n            <Nav.Item\n              icon={<Icon icon={toggle ? 'external-link-square' : 'gears2'} />}\n              onClick={(e: any) => {\n                e.stopPropagation();\n                setToggle(!toggle);\n              }}\n              style={{ backgroundColor: '#0f131a' }}\n            >\n              {!toggle ? 'Ellie Engine v0.0.1' : '-'}\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Header>\n\n        <Sidenav.Body style={{ height: 'calc(100%-50px)', marginTop: '50px' }}>\n          <Nav activeKey={pathname}>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/')}\n              eventKey='/'\n            >\n              Tilemap With Buffer\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/cave-generate')}\n              eventKey='/cave-generate'\n            >\n              Cave Generate\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/cave-generate-texture')}\n              eventKey='/cave-generate-texture'\n            >\n              Cave With Texture\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-simulation')}\n              eventKey='/liquid-simulation'\n            >\n              Liquid Simulation\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-simulation-2')}\n              eventKey='/liquid-simulation-2'\n            >\n              Liquid Simulation 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-stress-test')}\n              eventKey='/liquid-stress-test'\n            >\n              Liquid Stress Test\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='close' />}\n              onSelect={() => history.push('/line-intersection')}\n              eventKey='/line-intersection'\n              disabled\n            >\n              Line Intersection\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='square-o' />}\n              onSelect={() => history.push('/viewport')}\n              eventKey='/viewport'\n              disabled\n            >\n              Viewport\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-area')}\n              eventKey='/lighting-area'\n              disabled\n            >\n              Lighting Area\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-area-2')}\n              eventKey='/lighting-area-2'\n              disabled\n            >\n              Lighting Area 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-stress-test')}\n              eventKey='/lighting-stress-test'\n              disabled\n            >\n              Lighting Stress Test\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-with-viewport')}\n              eventKey='/lighting-with-viewport'\n              disabled\n            >\n              Lighting With Viewport\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-collision')}\n              eventKey='/aabb-collision'\n              disabled\n            >\n              AABB Collision\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-collision-2')}\n              eventKey='/aabb-collision-2'\n              disabled\n            >\n              AABB Collision 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-stress-test')}\n              eventKey='/aabb-stress-test'\n              disabled\n            >\n              AABB Stress Test\n            </Nav.Item>\n\n            <Nav.Item\n              icon={<Icon icon='globe' />}\n              onSelect={() => history.push('/sample-world')}\n              eventKey='/sample-world'\n              disabled\n            >\n              Sample World 1\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </Sidebar>\n  );\n};\n\nexport default SideNavigation;\n","import * as PIXI from 'pixi.js';\n\nfunction drawTiles(\n  graphics: PIXI.Graphics,\n  grid: Array<Array<[Uint8Array, Float64Array]>>,\n  tilesize: number = 8\n): void {\n  graphics.beginFill(0x666666);\n  for (let y = 0; y < grid.length; y++) {\n    for (let x = 0; x < grid[y].length; x++) {\n      if (grid[y][x][0][0]) {\n        graphics.drawRect(x * tilesize, y * tilesize, tilesize, tilesize);\n      }\n    }\n  }\n  graphics.endFill();\n}\n\nexport { drawTiles };\n","const TILE_BYTES = 8;\n\nfunction create(\n  width: number,\n  height: number,\n  options?: {\n    splitSize: number;\n    density: {\n      block: number;\n      liquid: number;\n    };\n  }\n): Array<Array<ArrayBuffer>> {\n  const { splitSize = 0, density = { block: 0.5, liquid: 0.5 } } =\n    options || {};\n\n  if (splitSize === 0) {\n    const arrayBuffer = new ArrayBuffer(width * height * TILE_BYTES + 16);\n\n    for (let i = 0; i < width * height; i++) {\n      const properties = new Uint8Array(arrayBuffer, i * TILE_BYTES, 4);\n      const liquid = new Float32Array(arrayBuffer, i * TILE_BYTES + 4, 1);\n      const tileType = Math.random() < density.block ? 1 : 0;\n\n      properties[0] = tileType; // tileType\n      properties[1] = 0; // backgroundType\n      properties[2] = 0; // liquidType\n      properties[3] = 0; // lightingLevel\n      liquid[0] = tileType === 0 && Math.random() < density.liquid ? 1 : 0; // liquid\n    }\n\n    const size = new Float64Array(arrayBuffer, arrayBuffer.byteLength - 16, 2);\n    size[0] = height; // height\n    size[1] = width; // width\n\n    return [[arrayBuffer]];\n  } else if (width % splitSize !== 0 || height % splitSize !== 0) {\n    throw new Error(\n      'width and height must be perfectly was divided by split size'\n    );\n  } else {\n    const arrayBufferGrid = new Array(height / splitSize)\n      .fill(true)\n      .map(() => new Array(width / splitSize));\n\n    for (let gridY = 0; gridY < height / splitSize; gridY++) {\n      for (let gridX = 0; gridX < width / splitSize; gridX++) {\n        const arrayBuffer = new ArrayBuffer(splitSize ** 2 * TILE_BYTES + 16);\n\n        for (let i = 0; i < splitSize ** 2; i++) {\n          const properties = new Uint8Array(arrayBuffer, i * TILE_BYTES, 4);\n          const liquid = new Float32Array(arrayBuffer, i * TILE_BYTES + 4, 1);\n          const tileType = Math.random() < density.block ? 1 : 0;\n\n          properties[0] = tileType; // tileType\n          properties[1] = 0; // backgroundType\n          properties[2] = 0; // liquidType\n          properties[3] = 0; // lightingLevel\n          liquid[0] = tileType === 0 && Math.random() < density.liquid ? 1 : 0; // liquid\n        }\n\n        const size = new Float64Array(\n          arrayBuffer,\n          arrayBuffer.byteLength - 16,\n          2\n        );\n        size[0] = splitSize; // height\n        size[1] = splitSize; // width\n\n        arrayBufferGrid[gridY][gridX] = arrayBuffer;\n      }\n    }\n\n    return arrayBufferGrid;\n  }\n}\n\nfunction merge(\n  arrayBufferGrid: Array<Array<ArrayBuffer>>\n): Array<Array<[Uint8Array, Float64Array]>> {\n  const size = new Float64Array(\n    arrayBufferGrid[0][0],\n    arrayBufferGrid[0][0].byteLength - 16,\n    2\n  );\n  const height = size[0];\n  const width = size[1];\n  const grid = new Array(height * arrayBufferGrid.length)\n    .fill(true)\n    .map(() => new Array(width * arrayBufferGrid[0].length));\n\n  for (let y = 0; y < grid.length; y++) {\n    const [baseY, offsetY] = [Math.floor(y / height), y % height];\n    for (let x = 0; x < grid[y].length; x++) {\n      const [baseX, offsetX] = [Math.floor(x / width), x % width];\n\n      grid[y][x] = [\n        new Uint8Array(\n          arrayBufferGrid[baseY][baseX],\n          (offsetY * width + offsetX) * TILE_BYTES,\n          4\n        ),\n        new Float32Array(\n          arrayBufferGrid[baseY][baseX],\n          (offsetY * width + offsetX) * TILE_BYTES + 4,\n          1\n        ),\n      ];\n    }\n  }\n\n  return grid;\n}\n\nexport { create, merge };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\n\nconst TilemapWithBuffer = () => {\n  useEffect(() => {\n    (async () => {\n      // Buffer Tile Map Generate\n      const width = Math.ceil(window.innerWidth / 8);\n      const height = Math.ceil(window.innerHeight / 8);\n      const arrayBufferGrid: Array<Array<ArrayBuffer>> = Map.create(\n        width,\n        height\n      );\n      const grid: Array<Array<[Uint8Array, Float64Array]>> =\n        Map.merge(arrayBufferGrid);\n\n      // Rendering\n      const app: PIXI.Application = setRenderer();\n      const graphics = new PIXI.Graphics();\n\n      graphics.clear();\n      drawTiles(graphics, grid);\n\n      app.stage.addChild(graphics);\n      setUpdater(() => {});\n    })();\n  }, []);\n\n  return <></>;\n};\n\nexport default TilemapWithBuffer;\n","// https://gamedevelopment.tutsplus.com/tutorials/generate-random-cave-levels-using-cellular-automata--gamedev-9664\n\nfunction countAliveNeighbours(\n  x: number,\n  y: number,\n  grid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  let aliveNeighbours = 0;\n\n  for (let offsetY = -1; offsetY <= 1; offsetY++) {\n    for (let offsetX = -1; offsetX <= 1; offsetX++) {\n      const neighborX: number = x + offsetX;\n      const neighborY: number = y + offsetY;\n\n      if (offsetX === 0 && offsetY === 0) {\n      } else if (\n        neighborX < 0 ||\n        neighborY < 0 ||\n        neighborX >= grid[0].length ||\n        neighborY >= grid.length\n      ) {\n        aliveNeighbours++;\n      } else if (grid[neighborY][neighborX][0][0]) {\n        aliveNeighbours++;\n      }\n    }\n  }\n\n  return aliveNeighbours;\n}\n\nfunction nextStep(\n  grid: Array<Array<[Uint8Array, Float64Array]>>,\n  options: { deathLimit: number; birthLimit: number }\n): void {\n  const afterGrid: Array<Array<boolean>> = new Array(grid.length)\n    .fill(true)\n    .map(() => new Array(grid[0].length).fill(false));\n  const { deathLimit, birthLimit } = options;\n\n  for (let y = 0; y < grid.length; y++) {\n    for (let x = 0; x < grid[0].length; x++) {\n      let alives: number = countAliveNeighbours(x, y, grid);\n\n      if (grid[y][x][0][0]) {\n        if (alives < birthLimit) {\n          afterGrid[y][x] = false;\n        } else {\n          afterGrid[y][x] = true;\n        }\n      } else {\n        if (alives > deathLimit) {\n          afterGrid[y][x] = true;\n        } else {\n          afterGrid[y][x] = false;\n        }\n      }\n    }\n  }\n\n  for (let y = 0; y < afterGrid.length; y++) {\n    for (let x = 0; x < afterGrid[0].length; x++) {\n      grid[y][x][0][0] = afterGrid[y][x] ? 1 : 0;\n    }\n  }\n}\n\nexport { nextStep };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\n\nconst CaveGenerate = () => {\n  useEffect(() => {\n    (async () => {\n      // Buffer Tile Map Generate\n      const width = Math.ceil(window.innerWidth / 8);\n      const height = Math.ceil(window.innerHeight / 8);\n      const arrayBufferGrid: Array<Array<ArrayBuffer>> = Map.create(\n        width,\n        height\n      );\n      const grid: Array<Array<[Uint8Array, Float64Array]>> =\n        Map.merge(arrayBufferGrid);\n\n      // Rendering\n      const app: PIXI.Application = setRenderer();\n      const graphics = new PIXI.Graphics();\n\n      graphics.clear();\n      drawTiles(graphics, grid);\n\n      app.stage.addChild(graphics);\n\n      // Update Logic\n      let frames = 0;\n      let stepCount = 0;\n      setUpdater(() => {\n        if (frames++ >= 10 && stepCount < 10) {\n          CaveGenerator.nextStep(\n            grid,\n            stepCount < 4\n              ? { deathLimit: 3, birthLimit: 5 }\n              : { deathLimit: 4, birthLimit: 4 }\n          );\n\n          graphics.clear();\n          drawTiles(graphics, grid);\n\n          stepCount++;\n          frames = 0;\n        }\n      });\n    })();\n  }, []);\n\n  return <></>;\n};\n\nexport default CaveGenerate;\n","function getTileNumber(\n  x: number,\n  y: number,\n  grid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  const topLeft =\n    y > 0 && x > 0 && grid[y - 1][x - 1][0][0] === grid[y][x][0][0];\n  const top = y > 0 && grid[y - 1][x][0][0] === grid[y][x][0][0];\n  const topRight =\n    y > 0 &&\n    x < grid[0].length - 1 &&\n    grid[y - 1][x + 1][0][0] === grid[y][x][0][0];\n  const left = x > 0 && grid[y][x - 1][0][0] === grid[y][x][0][0];\n  const right =\n    x < grid[0].length - 1 && grid[y][x + 1][0][0] === grid[y][x][0][0];\n  const bottomLeft =\n    y < grid.length - 1 &&\n    x > 0 &&\n    grid[y + 1][x - 1][0][0] === grid[y][x][0][0];\n  const bottom =\n    y < grid.length - 1 && grid[y + 1][x][0][0] === grid[y][x][0][0];\n  const bottomRight =\n    y < grid.length - 1 &&\n    x < grid[0].length - 1 &&\n    grid[y + 1][x + 1][0][0] === grid[y][x + 1][0][0];\n\n  if (!top && !left && right && bottom) return 1;\n  if (!top && left && right && bottom && !bottomLeft && bottomRight) return 41;\n  if (!top && left && right && bottom && !bottomLeft && !bottomRight) return 42;\n  if (!top && left && right && bottom && bottomLeft && !bottomRight) return 43;\n  if (!top && left && right && bottom) return 2;\n  if (!top && left && !right && bottom) return 3;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 4;\n  if (top && left && right && !bottom && !topLeft && topRight) return 51;\n  if (top && left && right && !bottom && topLeft && !topRight) return 53;\n  if (top && left && right && !bottom && !topLeft && !topRight) return 52;\n  if (top && left && right && !bottom) return 5;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 6;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 12;\n  if (top && !left && right && bottom && !topRight && bottomRight) return 36;\n  if (top && !left && right && bottom && !topRight && !bottomRight) return 37;\n  if (top && !left && right && bottom && topRight && !bottomRight) return 38;\n  if (top && !left && right && bottom) return 11;\n  if (top && left && !right && bottom && topLeft && !bottomLeft) return 44;\n  if (top && left && !right && bottom && !topLeft && !bottomLeft) return 45;\n  if (top && left && !right && bottom && !topLeft && bottomLeft) return 46;\n  if (top && left && !right && bottom) return 13;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 17;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 18;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 19;\n  if (top && !left && right && !bottom) return 21;\n  if (top && left && !right && !bottom) return 23;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 24;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 57;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 27;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 28;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 29;\n  if (!top && !left && right && !bottom) return 32;\n  if (!top && left && right && !bottom) return 33;\n  if (!top && left && !right && !bottom) return 34;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (!top && !left && !right && bottom) return 54;\n  if (top && !left && !right && bottom) return 55;\n  if (top && !left && !right && !bottom) return 56;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 35;\n\n  return 31;\n}\n\nfunction getWaterTileNumber(\n  x: number,\n  y: number,\n  grid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  const waterLevel = Math.floor(33 - Math.min(grid[y][x][1][0], 1) * 33);\n\n  if (\n    y < grid.length - 1 &&\n    y > 0 &&\n    x < grid[0].length - 1 &&\n    x > 0 &&\n    !grid[y - 1][x][1][0] &&\n    grid[y + 1][x][1][0] &&\n    ((grid[y][x - 1][1][0] &&\n      grid[y - 1][x - 1][1][0] &&\n      grid[y][x - 1][1][0] < 1 &&\n      grid[y - 1][x - 1][1][0] < 1 &&\n      grid[y + 1][x + 1][1][0] < 1) ||\n      (grid[y][x + 1][1][0] &&\n        grid[y - 1][x + 1][1][0] &&\n        grid[y][x + 1][1][0] < 1 &&\n        grid[y - 1][x + 1][1][0] < 1 &&\n        grid[y + 1][x - 1][1][0] < 1))\n  ) {\n    if (grid[y - 1][x - 1][1][0] && grid[y - 1][x + 1][1][0]) {\n      return 36;\n    } else if (grid[y - 1][x - 1][1][0]) {\n      return 35;\n    } else if (grid[y - 1][x + 1][1][0]) {\n      return 34;\n    }\n  } else if (\n    waterLevel <= 1 &&\n    (y === 0 || (!grid[y - 1][x][0][0] && !grid[y - 1][x][1][0]))\n  ) {\n    return 2;\n  } else if (y > 0 && grid[y - 1][x][1][0]) {\n    return 0;\n  } else {\n    return waterLevel;\n  }\n\n  return -1;\n}\n\nexport { getTileNumber, getWaterTileNumber };\n","import * as PIXI from 'pixi.js';\nimport { useState, useEffect } from 'react';\nimport { Progress } from 'rsuite';\nimport { preload, setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport { getTileNumber } from '../utils/Tile';\n\nconst CaveGenerateWithTexture = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [asset, setAsset] = useState('');\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      // Buffer Tile Map Generate\n      const width = Math.ceil(window.innerWidth / 8);\n      const height = Math.ceil(window.innerHeight / 8);\n      const arrayBufferGrid: Array<Array<ArrayBuffer>> = Map.create(\n        width,\n        height\n      );\n      const grid: Array<Array<[Uint8Array, Float64Array]>> =\n        Map.merge(arrayBufferGrid);\n\n      // Rendering\n      const app: PIXI.Application = setRenderer();\n      await preload((percentage: number, assetName: string) => {\n        setPercentage(Math.floor(percentage * 100));\n        setAsset(assetName);\n      });\n      setHide(true);\n      const graphics = new PIXI.Graphics();\n\n      graphics.clear();\n      drawTiles(graphics, grid);\n\n      app.stage.addChild(graphics);\n\n      // Update Logic\n      let frames = 0;\n      let stepCount = 0;\n      setUpdater(() => {\n        if (frames++ >= 10 && stepCount < 10) {\n          CaveGenerator.nextStep(\n            grid,\n            stepCount < 4\n              ? { deathLimit: 3, birthLimit: 5 }\n              : { deathLimit: 4, birthLimit: 4 }\n          );\n\n          graphics.clear();\n          drawTiles(graphics, grid);\n\n          stepCount++;\n          frames = 0;\n\n          if (stepCount === 10) {\n            app.stage.removeChild(graphics);\n\n            const tileContainer = new PIXI.Container();\n            const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n              .fill(true)\n              .map(() => new Array(width));\n\n            for (let y = 0; y < height; y++) {\n              for (let x = 0; x < width; x++) {\n                const sprite = new PIXI.Sprite(\n                  grid[y][x][0][0]\n                    ? PIXI.Texture.from(\n                        `tiles/Tile_${getTileNumber(x, y, grid)\n                          .toString()\n                          .padStart(2, '0')}.png`\n                      )\n                    : PIXI.Texture.from(`tiles/Tile_61.png`)\n                );\n                sprite.width = 8;\n                sprite.height = 8;\n                sprite.x = x * 8;\n                sprite.y = y * 8;\n                tileSprites[y][x] = sprite;\n                tileContainer.addChild(sprite);\n              }\n            }\n\n            app.stage.addChild(tileContainer);\n            tileContainer.cacheAsBitmap = true;\n          }\n        }\n      });\n    })();\n  }, []);\n\n  return (\n    <>\n      {\n        <div\n          style={{\n            width: '100%',\n            position: 'absolute',\n            bottom: '20px',\n            opacity: hide ? 0 : 1,\n            transitionProperty: 'opacity',\n            transitionDuration: '1s',\n          }}\n        >\n          <div\n            style={{ width: '100%', textAlign: 'center' }}\n            className='noselect'\n          >\n            Loading Asset : {asset}\n          </div>\n          <Progress.Line\n            percent={percentage}\n            status={percentage === 100 ? 'success' : 'active'}\n          />\n        </div>\n      }\n    </>\n  );\n};\n\nexport default CaveGenerateWithTexture;\n","const MIN_LIQUID_VALUE = 0.005;\nconst MAX_LIQUID_VALUE = 1.0;\nconst MAX_COMPRESSION = 0.25;\nconst MIN_FLOW = 0.005;\nconst MAX_FLOW = 4;\nconst FLOW_SPEED = 1;\n\nfunction calculateVerticalFlowValue(\n  remainingLiquid: number,\n  destination: [Uint8Array, Float64Array]\n): number {\n  const sum = remainingLiquid + destination[1][0];\n\n  if (sum <= MAX_LIQUID_VALUE) {\n    return MAX_LIQUID_VALUE;\n  } else if (sum < 2 * MAX_LIQUID_VALUE + MAX_COMPRESSION) {\n    return (\n      (MAX_LIQUID_VALUE * MAX_LIQUID_VALUE + sum * MAX_COMPRESSION) /\n      (MAX_LIQUID_VALUE + MAX_COMPRESSION)\n    );\n  } else {\n    return (sum + MAX_COMPRESSION) / 2;\n  }\n}\n\nfunction nextStep(grid: Array<Array<[Uint8Array, Float64Array]>>): void {\n  let flow = 0;\n  const tileDatas = new Array(grid.length)\n    .fill(true)\n    .map(() =>\n      new Array(grid[0].length)\n        .fill(true)\n        .map(() => ({ diff: 0, settled: false, settleCount: 0 }))\n    );\n\n  for (let y = 0; y < grid.length; y++) {\n    for (let x = 0; x < grid[y].length; x++) {\n      const cell = grid[y][x];\n\n      if (cell[0][0]) {\n        cell[1][0] = 0;\n        continue;\n      }\n      if (cell[1][0] === 0) continue;\n      if (tileDatas[y][x].settled) continue;\n      if (cell[1][0] < MIN_LIQUID_VALUE) {\n        cell[1][0] = 0;\n        continue;\n      }\n\n      let startValue = cell[1][0];\n      let remainingValue = cell[1][0];\n      flow = 0;\n\n      if (y < grid.length - 1 && !grid[y + 1][x][0][0]) {\n        flow =\n          calculateVerticalFlowValue(cell[1][0], grid[y + 1][x]) -\n          grid[y + 1][x][1][0];\n\n        if (grid[y + 1][x][1][0] > 0 && flow > MIN_FLOW) {\n          flow *= FLOW_SPEED;\n        }\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, cell[1][0])) {\n          flow = Math.min(MAX_FLOW, cell[1][0]);\n        }\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileDatas[y][x].diff -= flow;\n          tileDatas[y + 1][x].diff += flow;\n          tileDatas[y + 1][x].settled = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileDatas[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (x > 0 && !grid[y][x - 1][0][0]) {\n        flow = (remainingValue - grid[y][x - 1][1][0]) / 4;\n\n        if (flow > MIN_FLOW) {\n          flow *= FLOW_SPEED;\n        }\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue)) {\n          flow = Math.min(MAX_FLOW, remainingValue);\n        }\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileDatas[y][x].diff -= flow;\n          tileDatas[y][x - 1].diff += flow;\n          tileDatas[y][x - 1].settled = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileDatas[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (x < grid[y].length - 1 && !grid[y][x + 1][0][0]) {\n        flow = (remainingValue - grid[y][x + 1][1][0]) / 3;\n        if (flow > MIN_FLOW) {\n          flow *= FLOW_SPEED;\n        }\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue)) {\n          flow = Math.min(MAX_FLOW, remainingValue);\n        }\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileDatas[y][x].diff -= flow;\n          tileDatas[y][x + 1].diff += flow;\n          tileDatas[y][x + 1].settled = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileDatas[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (y > 0 && !grid[y - 1][x][0][0]) {\n        flow =\n          remainingValue -\n          calculateVerticalFlowValue(remainingValue, grid[y - 1][x]);\n        if (flow > MIN_FLOW) {\n          flow *= FLOW_SPEED;\n        }\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue)) {\n          flow = Math.min(MAX_FLOW, remainingValue);\n        }\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileDatas[y][x].diff -= flow;\n          tileDatas[y - 1][x].diff += flow;\n          tileDatas[y - 1][x].settled = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileDatas[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (startValue === remainingValue) {\n        tileDatas[y][x].settleCount++;\n        if (tileDatas[y][x].settleCount >= 10) {\n          tileDatas[y][x].settled = true;\n        }\n      } else {\n        if (y > 0 && grid[y - 1][x]) tileDatas[y - 1][x].settled = false;\n        if (y < grid.length - 1 && grid[y + 1][x])\n          tileDatas[y + 1][x].settled = false;\n        if (x > 0 && grid[y][x - 1]) tileDatas[y][x - 1].settled = false;\n        if (x < grid[0].length - 1 && grid[y][x + 1])\n          tileDatas[y][x + 1].settled = false;\n      }\n    }\n  }\n\n  for (let y = 0; y < grid.length; y++) {\n    for (let x = 0; x < grid[y].length; x++) {\n      grid[y][x][1][0] += tileDatas[y][x].diff;\n      if (grid[y][x][1][0] < MIN_LIQUID_VALUE) {\n        grid[y][x][1][0] = 0;\n      }\n    }\n  }\n}\n\nexport { nextStep };\n","import * as PIXI from 'pixi.js';\nimport { useState, useEffect } from 'react';\nimport { Progress } from 'rsuite';\nimport { preload, setRenderer, setUpdater } from '../utils';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport { getTileNumber, getWaterTileNumber } from '../utils/Tile';\n\nconst LiquidSimulation = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [asset, setAsset] = useState('');\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      // Buffer Tile Map Generate\n      const width = Math.ceil(window.innerWidth / 8);\n      const height = Math.ceil(window.innerHeight / 8);\n      const arrayBufferGrid: Array<Array<ArrayBuffer>> = Map.create(\n        width,\n        height,\n        {\n          splitSize: 0,\n          density: {\n            block: 0.5,\n            liquid: 0.5,\n          },\n        }\n      );\n      const grid: Array<Array<[Uint8Array, Float64Array]>> =\n        Map.merge(arrayBufferGrid);\n\n      for (let i = 0; i < 10; i++) {\n        CaveGenerator.nextStep(\n          grid,\n          i < 4\n            ? { deathLimit: 3, birthLimit: 5 }\n            : { deathLimit: 4, birthLimit: 4 }\n        );\n      }\n\n      // Rendering\n      const app: PIXI.Application = setRenderer();\n      await preload((percentage: number, assetName: string) => {\n        setPercentage(Math.floor(percentage * 100));\n        setAsset(assetName);\n      });\n      setHide(true);\n      const backgroundContainer = new PIXI.Container();\n      const tileContainer = new PIXI.Container();\n      const waterContainer = new PIXI.Container();\n      const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n        .fill(true)\n        .map(() => new Array(width));\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (grid[y][x][0][0]) {\n            const sprite = new PIXI.Sprite(\n              PIXI.Texture.from(\n                `tiles/Tile_${getTileNumber(x, y, grid)\n                  .toString()\n                  .padStart(2, '0')}.png`\n              )\n            );\n            sprite.width = 8;\n            sprite.height = 8;\n            sprite.x = x * 8;\n            sprite.y = y * 8;\n            tileSprites[y][x] = sprite;\n            tileContainer.addChild(sprite);\n          } else {\n            const waterTileNumber = getWaterTileNumber(x, y, grid);\n            const waterSprite = new PIXI.Sprite(\n              waterTileNumber >= 0\n                ? PIXI.Texture.from(\n                    `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                  )\n                : PIXI.Texture.EMPTY\n            );\n            waterSprite.width = 8;\n            waterSprite.height = 8;\n            waterSprite.x = x * 8;\n            waterSprite.y = y * 8;\n            tileSprites[y][x] = waterSprite;\n            waterContainer.addChild(waterSprite);\n\n            const sprite = new PIXI.Sprite(\n              PIXI.Texture.from(`tiles/Tile_61.png`)\n            );\n            sprite.width = 8;\n            sprite.height = 8;\n            sprite.x = x * 8;\n            sprite.y = y * 8;\n            backgroundContainer.addChild(sprite);\n          }\n        }\n      }\n\n      app.stage.addChild(backgroundContainer);\n      app.stage.addChild(tileContainer);\n      app.stage.addChild(waterContainer);\n\n      backgroundContainer.cacheAsBitmap = true;\n      tileContainer.cacheAsBitmap = true;\n\n      // Update Logic\n      setUpdater(() => {\n        LiquidSimulator.nextStep(grid);\n\n        for (let y = 0; y < height; y++) {\n          for (let x = 0; x < width; x++) {\n            if (!grid[y][x][0][0]) {\n              const waterTileNumber = getWaterTileNumber(x, y, grid);\n              tileSprites[y][x].texture =\n                grid[y][x][1][0] && waterTileNumber >= 0\n                  ? PIXI.Texture.from(\n                      `waters/${waterTileNumber\n                        .toString()\n                        .padStart(2, '0')}.png`\n                    )\n                  : PIXI.Texture.EMPTY;\n              tileSprites[y][x].alpha = Math.min(\n                0.3 + grid[y][x][1][0] * 0.15,\n                0.8\n              );\n            }\n          }\n        }\n      });\n    })();\n  }, []);\n\n  return (\n    <>\n      {\n        <div\n          style={{\n            width: '100%',\n            position: 'absolute',\n            bottom: '20px',\n            opacity: hide ? 0 : 1,\n            transitionProperty: 'opacity',\n            transitionDuration: '1s',\n          }}\n        >\n          <div\n            style={{ width: '100%', textAlign: 'center' }}\n            className='noselect'\n          >\n            Loading Asset : {asset}\n          </div>\n          <Progress.Line\n            percent={percentage}\n            status={percentage === 100 ? 'success' : 'active'}\n          />\n        </div>\n      }\n    </>\n  );\n};\n\nexport default LiquidSimulation;\n","import * as PIXI from 'pixi.js';\n\nfunction createLabel(text: string): PIXI.Container {\n  const labelContainer = new PIXI.Container();\n  const labelBackground = new PIXI.Graphics();\n  const label = new PIXI.Text(text, {\n    fontSize: 13,\n    fill: 0xffffff,\n  });\n\n  label.x = 1;\n  label.y = 1;\n\n  labelBackground.beginFill(0x000000, 0.5);\n  labelBackground.drawRect(0, 0, label.width + 2, label.height + 2);\n  labelBackground.endFill();\n  labelContainer.addChild(labelBackground);\n  labelContainer.addChild(label);\n\n  return labelContainer;\n}\n\nexport { createLabel };\n","import * as PIXI from 'pixi.js';\nimport { useState, useEffect } from 'react';\nimport { Progress } from 'rsuite';\nimport { preload, setRenderer, setUpdater } from '../utils';\nimport { createLabel } from '../utils/Label';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport { getTileNumber, getWaterTileNumber } from '../utils/Tile';\n\nconst onTouch = (e: any) => {\n  const [x, y] = [\n    Math.floor(e.targetTouches[0].clientX / 8),\n    Math.floor(e.targetTouches[0].clientY / 8),\n  ];\n  spreadWater(x, y);\n};\n\nconst onClick = (e: any) => {\n  const [x, y] = [Math.floor(e.clientX / 8), Math.floor(e.clientY / 8)];\n  spreadWater(x, y);\n};\n\nlet callback: (x: number, y: number) => void;\nconst spreadWater = (x: number, y: number): void => {\n  if (callback) callback(x, y);\n};\n\nconst LiquidSimulation2 = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [asset, setAsset] = useState('');\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      // Buffer Tile Map Generate\n      const width = Math.ceil(window.innerWidth / 8);\n      const height = Math.ceil(window.innerHeight / 8);\n      const arrayBufferGrid: Array<Array<ArrayBuffer>> = Map.create(\n        width,\n        height,\n        {\n          splitSize: 0,\n          density: {\n            block: 0.5,\n            liquid: 0,\n          },\n        }\n      );\n      const grid: Array<Array<[Uint8Array, Float64Array]>> =\n        Map.merge(arrayBufferGrid);\n\n      for (let i = 0; i < 10; i++) {\n        CaveGenerator.nextStep(\n          grid,\n          i < 4\n            ? { deathLimit: 3, birthLimit: 5 }\n            : { deathLimit: 4, birthLimit: 4 }\n        );\n      }\n\n      // Event Listener\n      window.removeEventListener('touchstart', onTouch);\n      window.removeEventListener('click', onClick);\n      window.addEventListener('touchstart', onTouch);\n      window.addEventListener('click', onClick);\n      callback = (x, y) => {\n        for (let offsetY = -3; offsetY <= 3; offsetY++) {\n          for (let offsetX = -3; offsetX <= 3; offsetX++) {\n            if (\n              x + offsetX >= 0 &&\n              x + offsetX < width &&\n              y + offsetY >= 0 &&\n              y + offsetY < height &&\n              !grid[y + offsetY][x + offsetX][0][0]\n            ) {\n              grid[y + offsetY][x + offsetX][1][0] += 1;\n            }\n          }\n        }\n      };\n\n      // Rendering\n      const app: PIXI.Application = setRenderer();\n      await preload((percentage: number, assetName: string) => {\n        setPercentage(Math.floor(percentage * 100));\n        setAsset(assetName);\n      });\n      setHide(true);\n      const label: PIXI.Container = createLabel('Click to create water');\n      label.x = Math.round(window.innerWidth / 2 - label.width / 2);\n      label.y = 60;\n\n      const backgroundContainer = new PIXI.Container();\n      const tileContainer = new PIXI.Container();\n      const waterContainer = new PIXI.Container();\n      const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n        .fill(true)\n        .map(() => new Array(width));\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (grid[y][x][0][0]) {\n            const sprite = new PIXI.Sprite(\n              PIXI.Texture.from(\n                `tiles/Tile_${getTileNumber(x, y, grid)\n                  .toString()\n                  .padStart(2, '0')}.png`\n              )\n            );\n            sprite.width = 8;\n            sprite.height = 8;\n            sprite.x = x * 8;\n            sprite.y = y * 8;\n            tileSprites[y][x] = sprite;\n            tileContainer.addChild(sprite);\n          } else {\n            const waterTileNumber = getWaterTileNumber(x, y, grid);\n            const waterSprite = new PIXI.Sprite(\n              waterTileNumber >= 0\n                ? PIXI.Texture.from(\n                    `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                  )\n                : PIXI.Texture.EMPTY\n            );\n            waterSprite.width = 8;\n            waterSprite.height = 8;\n            waterSprite.x = x * 8;\n            waterSprite.y = y * 8;\n            tileSprites[y][x] = waterSprite;\n            waterContainer.addChild(waterSprite);\n\n            const sprite = new PIXI.Sprite(\n              PIXI.Texture.from(`tiles/Tile_61.png`)\n            );\n            sprite.width = 8;\n            sprite.height = 8;\n            sprite.x = x * 8;\n            sprite.y = y * 8;\n            backgroundContainer.addChild(sprite);\n          }\n        }\n      }\n\n      app.stage.addChild(backgroundContainer);\n      app.stage.addChild(tileContainer);\n      app.stage.addChild(waterContainer);\n      app.stage.addChild(label);\n\n      backgroundContainer.cacheAsBitmap = true;\n      tileContainer.cacheAsBitmap = true;\n\n      // Update Logic\n      setUpdater(() => {\n        LiquidSimulator.nextStep(grid);\n\n        for (let y = 0; y < height; y++) {\n          for (let x = 0; x < width; x++) {\n            if (!grid[y][x][0][0]) {\n              const waterTileNumber = getWaterTileNumber(x, y, grid);\n              tileSprites[y][x].texture =\n                grid[y][x][1][0] && waterTileNumber >= 0\n                  ? PIXI.Texture.from(\n                      `waters/${waterTileNumber\n                        .toString()\n                        .padStart(2, '0')}.png`\n                    )\n                  : PIXI.Texture.EMPTY;\n              tileSprites[y][x].alpha = Math.min(\n                0.3 + grid[y][x][1][0] * 0.15,\n                0.8\n              );\n            }\n          }\n        }\n      });\n    })();\n  }, []);\n\n  return (\n    <>\n      {\n        <div\n          style={{\n            width: '100%',\n            position: 'absolute',\n            bottom: '20px',\n            opacity: hide ? 0 : 1,\n            transitionProperty: 'opacity',\n            transitionDuration: '1s',\n          }}\n        >\n          <div\n            style={{ width: '100%', textAlign: 'center' }}\n            className='noselect'\n          >\n            Loading Asset : {asset}\n          </div>\n          <Progress.Line\n            percent={percentage}\n            status={percentage === 100 ? 'success' : 'active'}\n          />\n        </div>\n      }\n    </>\n  );\n};\n\nexport default LiquidSimulation2;\n","import * as PIXI from 'pixi.js';\nimport { useState, useEffect } from 'react';\nimport { Progress } from 'rsuite';\nimport { preload, setRenderer, setUpdater } from '../utils';\nimport { createLabel } from '../utils/Label';\nimport * as Map from '../utils/Map';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport { getTileNumber, getWaterTileNumber } from '../utils/Tile';\n\nconst onTouch = (e: any) => {\n  const [x, y] = [\n    Math.floor(e.targetTouches[0].clientX / 8),\n    Math.floor(e.targetTouches[0].clientY / 8),\n  ];\n  spreadWater(x, y);\n};\n\nconst onClick = (e: any) => {\n  const [x, y] = [Math.floor(e.clientX / 8), Math.floor(e.clientY / 8)];\n  spreadWater(x, y);\n};\n\nlet callback: (x: number, y: number) => void;\nconst spreadWater = (x: number, y: number): void => {\n  if (callback) callback(x, y);\n};\n\nconst LiquidStressTest = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [asset, setAsset] = useState('');\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      // Buffer Tile Map Generate\n      const width = Math.ceil(window.innerWidth / 8);\n      const height = Math.ceil(window.innerHeight / 8);\n      const arrayBufferGrid: Array<Array<ArrayBuffer>> = Map.create(\n        width,\n        height,\n        {\n          splitSize: 0,\n          density: {\n            block: 0,\n            liquid: 1,\n          },\n        }\n      );\n      const grid: Array<Array<[Uint8Array, Float64Array]>> =\n        Map.merge(arrayBufferGrid);\n\n      // Event Listener\n      window.removeEventListener('touchstart', onTouch);\n      window.removeEventListener('click', onClick);\n      window.addEventListener('touchstart', onTouch);\n      window.addEventListener('click', onClick);\n      callback = (x, y) => {\n        for (let offsetY = -3; offsetY <= 3; offsetY++) {\n          for (let offsetX = -3; offsetX <= 3; offsetX++) {\n            if (\n              x + offsetX >= 0 &&\n              x + offsetX < width &&\n              y + offsetY >= 0 &&\n              y + offsetY < height &&\n              !grid[y + offsetY][x + offsetX][0][0]\n            ) {\n              grid[y + offsetY][x + offsetX][1][0] += 1;\n            }\n          }\n        }\n      };\n\n      // Rendering\n      const app: PIXI.Application = setRenderer();\n      await preload((percentage: number, assetName: string) => {\n        setPercentage(Math.floor(percentage * 100));\n        setAsset(assetName);\n      });\n      setHide(true);\n      const label: PIXI.Container = createLabel('Click to create water');\n      label.x = Math.round(window.innerWidth / 2 - label.width / 2);\n      label.y = 60;\n\n      const backgroundContainer = new PIXI.Container();\n      const tileContainer = new PIXI.Container();\n      const waterContainer = new PIXI.Container();\n      const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n        .fill(true)\n        .map(() => new Array(width));\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (grid[y][x][0][0]) {\n            const sprite = new PIXI.Sprite(\n              PIXI.Texture.from(\n                `tiles/Tile_${getTileNumber(x, y, grid)\n                  .toString()\n                  .padStart(2, '0')}.png`\n              )\n            );\n            sprite.width = 8;\n            sprite.height = 8;\n            sprite.x = x * 8;\n            sprite.y = y * 8;\n            tileSprites[y][x] = sprite;\n            tileContainer.addChild(sprite);\n          } else {\n            const waterTileNumber = getWaterTileNumber(x, y, grid);\n            const waterSprite = new PIXI.Sprite(\n              waterTileNumber >= 0\n                ? PIXI.Texture.from(\n                    `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                  )\n                : PIXI.Texture.EMPTY\n            );\n            waterSprite.width = 8;\n            waterSprite.height = 8;\n            waterSprite.x = x * 8;\n            waterSprite.y = y * 8;\n            tileSprites[y][x] = waterSprite;\n            waterContainer.addChild(waterSprite);\n\n            const sprite = new PIXI.Sprite(\n              PIXI.Texture.from(`tiles/Tile_61.png`)\n            );\n            sprite.width = 8;\n            sprite.height = 8;\n            sprite.x = x * 8;\n            sprite.y = y * 8;\n            backgroundContainer.addChild(sprite);\n          }\n        }\n      }\n\n      app.stage.addChild(backgroundContainer);\n      app.stage.addChild(tileContainer);\n      app.stage.addChild(waterContainer);\n      app.stage.addChild(label);\n\n      backgroundContainer.cacheAsBitmap = true;\n      tileContainer.cacheAsBitmap = true;\n\n      // Update Logic\n      setUpdater(() => {\n        LiquidSimulator.nextStep(grid);\n\n        for (let y = 0; y < height; y++) {\n          for (let x = 0; x < width; x++) {\n            if (!grid[y][x][0][0]) {\n              const waterTileNumber = getWaterTileNumber(x, y, grid);\n              tileSprites[y][x].texture =\n                grid[y][x][1][0] && waterTileNumber >= 0\n                  ? PIXI.Texture.from(\n                      `waters/${waterTileNumber\n                        .toString()\n                        .padStart(2, '0')}.png`\n                    )\n                  : PIXI.Texture.EMPTY;\n              tileSprites[y][x].alpha = Math.min(\n                0.3 + grid[y][x][1][0] * 0.15,\n                0.8\n              );\n            }\n          }\n        }\n      });\n    })();\n  }, []);\n\n  return (\n    <>\n      {\n        <div\n          style={{\n            width: '100%',\n            position: 'absolute',\n            bottom: '20px',\n            opacity: hide ? 0 : 1,\n            transitionProperty: 'opacity',\n            transitionDuration: '1s',\n          }}\n        >\n          <div\n            style={{ width: '100%', textAlign: 'center' }}\n            className='noselect'\n          >\n            Loading Asset : {asset}\n          </div>\n          <Progress.Line\n            percent={percentage}\n            status={percentage === 100 ? 'success' : 'active'}\n          />\n        </div>\n      }\n    </>\n  );\n};\n\nexport default LiquidStressTest;\n","import { useState, useEffect } from 'react';\nimport { Progress } from 'rsuite';\nimport { preload, setRenderer, setUpdater } from '../utils';\n\nconst LineIntersection = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [asset, setAsset] = useState('');\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setRenderer();\n      await preload((percentage: number, assetName: string) => {\n        setPercentage(Math.floor(percentage * 100));\n        setAsset(assetName);\n      });\n      setHide(true);\n      setUpdater(() => {});\n    })();\n  }, []);\n\n  return (\n    <>\n      {\n        <div\n          style={{\n            width: '100%',\n            position: 'absolute',\n            bottom: '20px',\n            opacity: hide ? 0 : 1,\n            transitionProperty: 'opacity',\n            transitionDuration: '1s',\n          }}\n        >\n          <div\n            style={{ width: '100%', textAlign: 'center' }}\n            className='noselect'\n          >\n            Loading Asset : {asset}\n          </div>\n          <Progress.Line\n            percent={percentage}\n            status={percentage === 100 ? 'success' : 'active'}\n          />\n        </div>\n      }\n    </>\n  );\n};\n\nexport default LineIntersection;\n","import { Route } from 'react-router';\nimport { Container } from 'rsuite';\nimport CreatorTag from './CreatorTag';\nimport SideNavigation from './SideNavigation';\nimport TilemapWithBuffer from './pages/TilemapWithBuffer';\nimport CaveGenerate from './pages/CaveGenerate';\nimport CaveGenerateWithTexture from './pages/CaveGenerateWithTexture';\nimport LiquidSimulation from './pages/LiquidSimulation';\nimport LiquidSimulation2 from './pages/LiquidSimulation2';\nimport LiquidStressTest from './pages/LiquidStressTest';\nimport LineIntersection from './pages/LineIntersection';\n\nconst App = () => {\n  return (\n    <>\n      <Container style={{ height: '100%' }}>\n        <SideNavigation />\n        <Container id='content'>\n          <Route exact path='/' component={TilemapWithBuffer} />\n          <Route exact path='/cave-generate' component={CaveGenerate} />\n          <Route\n            exact\n            path='/cave-generate-texture'\n            component={CaveGenerateWithTexture}\n          />\n          <Route exact path='/liquid-simulation' component={LiquidSimulation} />\n          <Route\n            exact\n            path='/liquid-simulation-2'\n            component={LiquidSimulation2}\n          />\n          <Route\n            exact\n            path='/liquid-stress-test'\n            component={LiquidStressTest}\n          />\n          <Route exact path='/line-intersection' component={LineIntersection} />\n          <CreatorTag />\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}