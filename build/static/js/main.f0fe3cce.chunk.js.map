{"version":3,"sources":["App.tsx","index.tsx"],"names":["preload","a","srcs","push","Promise","resolve","src","PIXI","shared","add","load","resolution","window","devicePixelRatio","SCALE_MODE","NEAREST","MIPMAP_TEXTURES","OFF","STRICT_TEXTURE_CACHE","stats","Stats","app","width","innerWidth","height","innerHeight","sharedLoader","powerPreference","backgroundColor","backgroundAlpha","autoStart","antialias","forceCanvas","preserveDrawingBuffer","view","style","document","body","appendChild","dom","container","stage","addChild","texture","from","i","bunny","anchor","set","x","y","Math","floor","screen","pivot","render","rotation","update","requestAnimationFrame","main","App","ReactDOM","StrictMode","getElementById"],"mappings":"oNAGeA,I,2EAAf,4BAAAC,EAAA,6DACQC,EAAsB,IAEvBC,KAAK,eAHZ,kBAKS,IAAIC,SAAQ,SAACC,GAAa,IAAD,gBACZH,GADY,IAC9B,2BAAwB,CAAC,IAAdI,EAAa,QACtBC,IAAYC,OAAOC,IAAIH,EAAKA,IAFA,8BAK9BC,IAAYC,OAAOE,MAAK,WACtBL,WAXN,4C,kEAgBA,0CAAAJ,EAAA,6DACQU,EAAqBC,OAAOC,kBAAoB,EACtDN,IAAcO,WAAaP,IAAiBQ,QAC5CR,IAAcS,gBAAkBT,IAAkBU,IAClDV,IAAcW,sBAAuB,EAE/BC,EAAe,IAAIC,KACnBC,EAAwB,IAAId,IAAiB,CACjDe,MAAOV,OAAOW,WACdC,OAAQZ,OAAOa,YACfC,cAAc,EACdC,gBAAiB,mBACjBC,gBAAiB,QACjBC,gBAAiB,EACjBC,WAAW,EACXC,WAAW,EACXC,aAAa,EACbC,uBAAuB,EACvBtB,gBAEEuB,KAAKC,MAAMb,MAAQ,OACvBD,EAAIa,KAAKC,MAAMX,OAAS,OACxBY,SAASC,KAAKC,YAAYjB,EAAIa,MAC9BE,SAASC,KAAKC,YAAYnB,EAAMoB,KAvBlC,UAyBQvC,IAzBR,QAoCE,IARMwC,EAA4B,IAAIjC,IAEtCc,EAAIoB,MAAMC,SAASF,GAGbG,EAAwBpC,IAAaqC,KAAK,eAGvCC,EAAI,EAAGA,EAAI,GAAIA,KAChBC,EAAqB,IAAIvC,IAAYoC,IACrCI,OAAOC,IAAI,IACjBF,EAAMG,EAAKJ,EAAI,EAAK,GACpBC,EAAMI,EAAwB,GAApBC,KAAKC,MAAMP,EAAI,GACzBL,EAAUE,SAASI,GAIrBN,EAAUS,EAAI5B,EAAIgC,OAAO/B,MAAQ,EACjCkB,EAAUU,EAAI7B,EAAIgC,OAAO7B,OAAS,EAGlCgB,EAAUc,MAAML,EAAIT,EAAUlB,MAAQ,EACtCkB,EAAUc,MAAMJ,EAAIV,EAAUhB,OAAS,EAEjC+B,EAAS,SAATA,IACJf,EAAUgB,UAAY,IAEtBrC,EAAMsC,SACNpC,EAAIkC,SACJ3C,OAAO8C,sBAAsBH,IAE/B3C,OAAO8C,sBAAsBH,GA3D/B,6C,0DA8DAI,GAEA,IAEeC,EAFH,kBAAM,8BC/ElBC,IAASN,OACP,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,W","file":"static/js/main.f0fe3cce.chunk.js","sourcesContent":["import * as PIXI from 'pixi.js';\nimport Stats from 'stats.js';\n\nasync function preload(): Promise<void> {\n  const srcs: Array<string> = [];\n\n  srcs.push('./bunny.png');\n\n  return new Promise((resolve) => {\n    for (const src of srcs) {\n      PIXI.Loader.shared.add(src, src);\n    }\n\n    PIXI.Loader.shared.load(() => {\n      resolve();\n    });\n  });\n}\n\nasync function main(): Promise<void> {\n  const resolution: number = window.devicePixelRatio || 1;\n  PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n  PIXI.settings.MIPMAP_TEXTURES = PIXI.MIPMAP_MODES.OFF;\n  PIXI.settings.STRICT_TEXTURE_CACHE = true;\n\n  const stats: Stats = new Stats();\n  const app: PIXI.Application = new PIXI.Application({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    sharedLoader: true,\n    powerPreference: 'high-performance',\n    backgroundColor: 0x202020,\n    backgroundAlpha: 0,\n    autoStart: false,\n    antialias: false,\n    forceCanvas: false,\n    preserveDrawingBuffer: false,\n    resolution,\n  });\n  app.view.style.width = '100%';\n  app.view.style.height = '100%';\n  document.body.appendChild(app.view);\n  document.body.appendChild(stats.dom);\n\n  await preload();\n\n  // Sample\n  const container: PIXI.Container = new PIXI.Container();\n\n  app.stage.addChild(container);\n\n  // Create a new texture\n  const texture: PIXI.Texture = PIXI.Texture.from('./bunny.png');\n\n  // Create a 5x5 grid of bunnies\n  for (let i = 0; i < 25; i++) {\n    const bunny: PIXI.Sprite = new PIXI.Sprite(texture);\n    bunny.anchor.set(0.5);\n    bunny.x = (i % 5) * 40;\n    bunny.y = Math.floor(i / 5) * 40;\n    container.addChild(bunny);\n  }\n\n  // Move container to the center\n  container.x = app.screen.width / 2;\n  container.y = app.screen.height / 2;\n\n  // Center bunny sprite in local container coordinates\n  container.pivot.x = container.width / 2;\n  container.pivot.y = container.height / 2;\n\n  const render = () => {\n    container.rotation -= 0.01;\n\n    stats.update();\n    app.render();\n    window.requestAnimationFrame(render);\n  };\n  window.requestAnimationFrame(render);\n}\n\nmain();\n\nconst App = () => <></>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}