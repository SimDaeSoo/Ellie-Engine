{"version":3,"sources":["utils/index.ts","components/CreatorTag.tsx","components/SideNavigation.tsx","components/ProgressBar.tsx","utils/Graphics.ts","utils/Map.ts","pages/TilemapWithBuffer.tsx","utils/CaveGenerator.ts","pages/CaveGenerate.tsx","utils/Tile.ts","pages/CaveGenerateWithTexture.tsx","utils/LiquidSimulator.ts","pages/LiquidSimulation.tsx","utils/Label.ts","pages/LiquidSimulation2.tsx","pages/LiquidStressTest.tsx","pages/LineIntersection.tsx","utils/Collision.ts","pages/LineIntersection2.tsx","App.tsx","index.tsx"],"names":["updater","app","preload","callback","a","assets","srcs","i","push","toString","padStart","src","loaded","PIXI","shared","onLoad","add","resource","length","name","Promise","resolve","asset","load","setRenderer","stage","removeAllListeners","removeChildren","resolution","window","devicePixelRatio","SCALE_MODE","NEAREST","MIPMAP_TEXTURES","OFF","STRICT_TEXTURE_CACHE","stats","Stats","width","innerWidth","height","innerHeight","sharedLoader","powerPreference","backgroundColor","backgroundAlpha","autoStart","antialias","forceCanvas","preserveDrawingBuffer","view","className","style","dom","right","removeProperty","document","getElementById","appendChild","requestAnimationFrame","render","update","setUpdater","CreatorTag","position","bottom","color","padding","href","SideNavigation","location","useLocation","history","useHistory","useState","toggle","setToggle","pathname","Sidebar","collapsible","overflow","Sidenav","Header","top","zIndex","Nav","Item","icon","Icon","onClick","e","stopPropagation","Body","marginTop","activeKey","onSelect","eventKey","disabled","ProgressBar","hide","percentage","opacity","transitionProperty","transitionDuration","textAlign","Progress","Line","percent","status","drawTiles","graphics","tileGrid","tilesize","beginFill","y","x","drawRect","endFill","drawPoints","points","radius","point","drawCircle","create","options","splitSize","density","block","liquid","arrayBuffer","ArrayBuffer","properties","Uint8Array","Float32Array","tileType","Math","random","size","Float64Array","byteLength","Error","arrayBufferGrid","Array","fill","map","tileGridY","tileGridX","merge","floor","baseY","offsetY","baseX","offsetX","createTileGridProperties","diff","isStable","stableLevel","TilemapWithBuffer","useEffect","Map","ceil","clear","addChild","countAliveNeighbours","aliveNeighbours","neighborX","neighborY","nextStep","afterGrid","deathLimit","birthLimit","alives","CaveGenerate","frames","stepCount","CaveGenerator","getTileNumber","topLeft","topRight","left","bottomLeft","bottomRight","getWaterTileNumber","waterLevel","min","CaveGenerateWithTexture","removeChild","tileContainer","tileSprites","sprite","from","cacheAsBitmap","liquidSimulateGenerator","stepGenerator","MIN_LIQUID_VALUE","MAX_COMPRESSION","MIN_FLOW","FLOW_SPEED","calculateVerticalFlowValue","remainingLiquid","destination","sum","MAX_LIQUID_VALUE","tileGridProperties","limitDuration","accumulate","accumulateLimit","begin","Date","now","flow","tile","startValue","remainingValue","max","step","next","done","LiquidSimulation","backgroundContainer","waterContainer","waterTileNumber","waterSprite","EMPTY","LiquidSimulator","texture","alpha","createLabel","text","labelContainer","labelBackground","label","fontSize","container","onTouch","targetTouches","clientX","clientY","spreadWater","LiquidSimulation2","removeEventListener","addEventListener","round","LiquidStressTest","LineIntersection","quarterWidth","quarterHeight","lineA","lineB","pointContainer","set","lines","lineStyle","end","moveTo","lineTo","line","reset","drawLines","collisionDt","det","t1","t2","Collision","collisionPoint","toFixed","LineIntersection2","App","setPercentage","setAsset","setHide","assetName","Container","id","exact","path","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2e355b22.chunk.js","sourcesContent":["import * as PIXI from 'pixi.js';\nimport Stats from 'stats.js';\n\nlet updater: () => void;\nlet app: PIXI.Application;\n\nasync function preload(\n  callback: (percentage: number, assetName: string) => void\n): Promise<void> {\n  const BASE_URL: string =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3000/Engine/build'\n      : 'https://simdaesoo.github.io/Engine/build';\n  const assets: Array<[string, string]> = [];\n  const srcs: Array<string> = [];\n\n  for (let i = 1; i <= 61; i++) {\n    srcs.push(`tiles/Tile_${i.toString().padStart(2, '0')}.png`);\n  }\n\n  for (let i = 0; i <= 36; i++) {\n    srcs.push(`waters/${i.toString().padStart(2, '0')}.png`);\n  }\n\n  srcs.push(`characters/ellie/idle.png`);\n\n  for (const src of srcs) {\n    assets.push([src, `${BASE_URL}/${src}`]);\n  }\n\n  let loaded = 0;\n\n  PIXI.Loader.shared.onLoad.add((...args: any) => {\n    const resource = args[1];\n    callback(++loaded / assets.length, resource.name);\n  });\n\n  return new Promise((resolve) => {\n    for (const asset of assets) {\n      PIXI.Loader.shared.add(...asset);\n    }\n\n    PIXI.Loader.shared.load(() => {\n      resolve();\n    });\n  });\n}\n\nfunction setRenderer(): PIXI.Application {\n  if (app) {\n    app.stage.removeAllListeners();\n    app.stage.removeChildren();\n    return app;\n  }\n  const resolution: number = window.devicePixelRatio || 1;\n  PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n  PIXI.settings.MIPMAP_TEXTURES = PIXI.MIPMAP_MODES.OFF;\n  PIXI.settings.STRICT_TEXTURE_CACHE = true;\n\n  const stats: Stats = new Stats();\n  app = new PIXI.Application({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    sharedLoader: true,\n    powerPreference: 'high-performance',\n    backgroundColor: 0x202020,\n    backgroundAlpha: 0,\n    autoStart: false,\n    antialias: false,\n    forceCanvas: false,\n    preserveDrawingBuffer: false,\n    resolution,\n  });\n  app.view.className = 'renderer';\n  app.view.style.width = '100%';\n  app.view.style.height = '100%';\n  stats.dom.style.right = '0';\n  stats.dom.style.removeProperty('left');\n\n  const dom: HTMLElement = document.getElementById('content') as HTMLElement;\n  dom.appendChild(app.view);\n  dom.appendChild(stats.dom);\n\n  const render = () => {\n    if (updater) updater();\n    stats.update();\n    app.render();\n    window.requestAnimationFrame(render);\n  };\n  window.requestAnimationFrame(render);\n\n  return app;\n}\n\nfunction setUpdater(callback: () => void): void {\n  updater = callback;\n}\n\nexport { setRenderer, setUpdater, preload };\n","const CreatorTag = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        color: '#FFFFFF',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        padding: '1px 4px',\n      }}\n      className='noselect'\n    >\n      <a href='https://github.com/SimDaeSoo'>Created by daesoo94</a>\n    </div>\n  );\n};\n\nexport default CreatorTag;\n","import { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Sidenav, Nav, Sidebar, Icon } from 'rsuite';\n\nconst SideNavigation = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [toggle, setToggle] = useState(true);\n  const { pathname } = location;\n\n  return (\n    <Sidebar\n      collapsible\n      width={toggle ? 0 : 250}\n      style={{\n        position: 'absolute',\n        height: '100%',\n        overflow: 'auto',\n        backgroundColor: '#1a1d24',\n      }}\n    >\n      <Sidenav>\n        <Sidenav.Header\n          style={{\n            position: 'fixed',\n            top: 0,\n            height: '50px',\n            width: toggle ? 56 : 250,\n            zIndex: 2,\n          }}\n        >\n          <Nav>\n            <Nav.Item\n              icon={<Icon icon={toggle ? 'external-link-square' : 'gears2'} />}\n              onClick={(e: any) => {\n                e.stopPropagation();\n                setToggle(!toggle);\n              }}\n              style={{ backgroundColor: '#0f131a' }}\n            >\n              {!toggle ? 'Ellie Engine v0.0.1' : '-'}\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Header>\n\n        <Sidenav.Body style={{ height: 'calc(100%-50px)', marginTop: '50px' }}>\n          <Nav activeKey={pathname}>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/')}\n              eventKey='/'\n            >\n              Tilemap With Buffer\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/cave-generate')}\n              eventKey='/cave-generate'\n            >\n              Cave Generate\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/cave-generate-texture')}\n              eventKey='/cave-generate-texture'\n            >\n              Cave With Texture\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-simulation')}\n              eventKey='/liquid-simulation'\n            >\n              Liquid Simulation\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-simulation-2')}\n              eventKey='/liquid-simulation-2'\n            >\n              Liquid Simulation 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-stress-test')}\n              eventKey='/liquid-stress-test'\n            >\n              Liquid Stress Test\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='close' />}\n              onSelect={() => history.push('/line-intersection')}\n              eventKey='/line-intersection'\n            >\n              Line Intersection\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='close' />}\n              onSelect={() => history.push('/line-intersection-2')}\n              eventKey='/line-intersection-2'\n              disabled\n            >\n              Line Intersection 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-area')}\n              eventKey='/lighting-area'\n              disabled\n            >\n              Lighting Area\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-area-2')}\n              eventKey='/lighting-area-2'\n              disabled\n            >\n              Lighting Area 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-stress-test')}\n              eventKey='/lighting-stress-test'\n              disabled\n            >\n              Lighting Stress Test\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-collision')}\n              eventKey='/aabb-collision'\n              disabled\n            >\n              AABB Collision\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-collision-2')}\n              eventKey='/aabb-collision-2'\n              disabled\n            >\n              AABB Collision 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-stress-test')}\n              eventKey='/aabb-stress-test'\n              disabled\n            >\n              AABB Stress Test\n            </Nav.Item>\n\n            <Nav.Item\n              icon={<Icon icon='globe' />}\n              onSelect={() => history.push('/sample-world')}\n              eventKey='/sample-world'\n              disabled\n            >\n              Sample World\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </Sidebar>\n  );\n};\n\nexport default SideNavigation;\n","import { Progress } from 'rsuite';\n\nconst ProgressBar = ({\n  hide,\n  asset,\n  percentage,\n}: {\n  hide: boolean;\n  asset: string;\n  percentage: number;\n}) => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        position: 'absolute',\n        bottom: '20px',\n        opacity: hide ? 0 : 1,\n        transitionProperty: 'opacity',\n        transitionDuration: '1s',\n      }}\n    >\n      <div style={{ width: '100%', textAlign: 'center' }} className='noselect'>\n        Loading Asset : {asset}\n      </div>\n      <Progress.Line\n        className='notransition'\n        percent={percentage}\n        status={percentage === 100 ? 'success' : 'active'}\n      />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import * as PIXI from 'pixi.js';\nimport { Line } from '../interfaces';\n\nfunction drawTiles(\n  graphics: PIXI.Graphics,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  tilesize: number = 8,\n  color: number = 0x666666\n): void {\n  graphics.beginFill(color);\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      if (tileGrid[y][x][0][0]) {\n        graphics.drawRect(x * tilesize, y * tilesize, tilesize, tilesize);\n      }\n    }\n  }\n  graphics.endFill();\n}\n\nfunction drawPoints(\n  graphics: PIXI.Graphics,\n  points: Array<[number, number]>,\n  radius: number = 1,\n  color: number = 0xff0000\n): void {\n  graphics.beginFill(color);\n\n  for (const point of points) {\n    graphics.drawCircle(point[0], point[1], radius);\n  }\n\n  graphics.endFill();\n}\n\nfunction drawLines(\n  graphics: PIXI.Graphics,\n  lines: Array<Line>,\n  width: number = 1,\n  color: number = 0x00ff00\n) {\n  graphics.lineStyle({ width, color });\n\n  for (const [begin, end] of lines) {\n    graphics.moveTo(...begin);\n    graphics.lineTo(...end);\n  }\n\n  graphics.endFill();\n  graphics.line.reset();\n}\n\nexport { drawTiles, drawPoints, drawLines };\n","import { TileProperties } from '../interfaces';\n\nconst TILE_BYTES = 8;\n\nfunction create(\n  width: number,\n  height: number,\n  options?: {\n    splitSize: number;\n    density: {\n      block: number;\n      liquid: number;\n    };\n  }\n): Array<Array<ArrayBuffer>> {\n  const { splitSize = 0, density = { block: 0.5, liquid: 0.5 } } =\n    options || {};\n\n  if (splitSize === 0) {\n    const arrayBuffer = new ArrayBuffer(width * height * TILE_BYTES + 16);\n\n    for (let i = 0; i < width * height; i++) {\n      const properties = new Uint8Array(arrayBuffer, i * TILE_BYTES, 4);\n      const liquid = new Float32Array(arrayBuffer, i * TILE_BYTES + 4, 1);\n      const tileType = Math.random() < density.block ? 1 : 0;\n\n      properties[0] = tileType; // tileType\n      properties[1] = 0; // backgroundType\n      properties[2] = 0; // liquidType\n      properties[3] = 0; // lightingLevel\n      liquid[0] = tileType === 0 && Math.random() < density.liquid ? 1 : 0; // liquid\n    }\n\n    const size = new Float64Array(arrayBuffer, arrayBuffer.byteLength - 16, 2);\n    size[0] = height; // height\n    size[1] = width; // width\n\n    return [[arrayBuffer]];\n  } else if (width % splitSize !== 0 || height % splitSize !== 0) {\n    throw new Error(\n      'width and height must be perfectly was divided by split size'\n    );\n  } else {\n    const arrayBufferGrid = new Array(height / splitSize)\n      .fill(true)\n      .map(() => new Array(width / splitSize));\n\n    for (let tileGridY = 0; tileGridY < height / splitSize; tileGridY++) {\n      for (let tileGridX = 0; tileGridX < width / splitSize; tileGridX++) {\n        const arrayBuffer = new ArrayBuffer(splitSize ** 2 * TILE_BYTES + 16);\n\n        for (let i = 0; i < splitSize ** 2; i++) {\n          const properties = new Uint8Array(arrayBuffer, i * TILE_BYTES, 4);\n          const liquid = new Float32Array(arrayBuffer, i * TILE_BYTES + 4, 1);\n          const tileType = Math.random() < density.block ? 1 : 0;\n\n          properties[0] = tileType; // tileType\n          properties[1] = 0; // backgroundType\n          properties[2] = 0; // liquidType\n          properties[3] = 0; // lightingLevel\n          liquid[0] = tileType === 0 && Math.random() < density.liquid ? 1 : 0; // liquid\n        }\n\n        const size = new Float64Array(\n          arrayBuffer,\n          arrayBuffer.byteLength - 16,\n          2\n        );\n        size[0] = splitSize; // height\n        size[1] = splitSize; // width\n\n        arrayBufferGrid[tileGridY][tileGridX] = arrayBuffer;\n      }\n    }\n\n    return arrayBufferGrid;\n  }\n}\n\nfunction merge(\n  arrayBufferGrid: Array<Array<ArrayBuffer>>\n): Array<Array<[Uint8Array, Float64Array]>> {\n  const size = new Float64Array(\n    arrayBufferGrid[0][0],\n    arrayBufferGrid[0][0].byteLength - 16,\n    2\n  );\n  const height = size[0];\n  const width = size[1];\n  const tileGrid = new Array(height * arrayBufferGrid.length)\n    .fill(true)\n    .map(() => new Array(width * arrayBufferGrid[0].length));\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    const [baseY, offsetY] = [Math.floor(y / height), y % height];\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      const [baseX, offsetX] = [Math.floor(x / width), x % width];\n\n      tileGrid[y][x] = [\n        new Uint8Array(\n          arrayBufferGrid[baseY][baseX],\n          (offsetY * width + offsetX) * TILE_BYTES,\n          4\n        ),\n        new Float32Array(\n          arrayBufferGrid[baseY][baseX],\n          (offsetY * width + offsetX) * TILE_BYTES + 4,\n          1\n        ),\n      ];\n    }\n  }\n\n  return tileGrid;\n}\n\nfunction createTileGridProperties(\n  width: number,\n  height: number\n): Array<Array<TileProperties>> {\n  const tileGridProperties: Array<Array<TileProperties>> = new Array(height)\n    .fill(true)\n    .map(() =>\n      new Array(width)\n        .fill(true)\n        .map(() => ({ diff: 0, isStable: false, stableLevel: 0 }))\n    );\n\n  return tileGridProperties;\n}\n\nexport { create, merge, createTileGridProperties };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\n\nconst TilemapWithBuffer = () => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const width = Math.ceil(window.innerWidth / 8);\n    const height = Math.ceil(window.innerHeight / 8);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    // Rendering\n    const app: PIXI.Application = setRenderer();\n    const graphics = new PIXI.Graphics();\n\n    graphics.clear();\n    drawTiles(graphics, tileGrid);\n\n    app.stage.addChild(graphics);\n  }, []);\n\n  return <></>;\n};\n\nexport default TilemapWithBuffer;\n","// https://gamedevelopment.tutsplus.com/tutorials/generate-random-cave-levels-using-cellular-automata--gamedev-9664\n\nfunction countAliveNeighbours(\n  x: number,\n  y: number,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  let aliveNeighbours = 0;\n\n  for (let offsetY = -1; offsetY <= 1; offsetY++) {\n    for (let offsetX = -1; offsetX <= 1; offsetX++) {\n      const neighborX: number = x + offsetX;\n      const neighborY: number = y + offsetY;\n\n      if (offsetX === 0 && offsetY === 0) {\n      } else if (\n        neighborX < 0 ||\n        neighborY < 0 ||\n        neighborX >= tileGrid[0].length ||\n        neighborY >= tileGrid.length\n      ) {\n        aliveNeighbours++;\n      } else if (tileGrid[neighborY][neighborX][0][0]) {\n        aliveNeighbours++;\n      }\n    }\n  }\n\n  return aliveNeighbours;\n}\n\nfunction nextStep(\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  options: { deathLimit: number; birthLimit: number }\n): void {\n  const afterGrid: Array<Array<boolean>> = new Array(tileGrid.length)\n    .fill(true)\n    .map(() => new Array(tileGrid[0].length).fill(false));\n  const { deathLimit, birthLimit } = options;\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[0].length; x++) {\n      let alives: number = countAliveNeighbours(x, y, tileGrid);\n\n      if (tileGrid[y][x][0][0]) {\n        if (alives < birthLimit) {\n          afterGrid[y][x] = false;\n        } else {\n          afterGrid[y][x] = true;\n        }\n      } else {\n        if (alives > deathLimit) {\n          afterGrid[y][x] = true;\n        } else {\n          afterGrid[y][x] = false;\n        }\n      }\n    }\n  }\n\n  for (let y = 0; y < afterGrid.length; y++) {\n    for (let x = 0; x < afterGrid[0].length; x++) {\n      tileGrid[y][x][0][0] = afterGrid[y][x] ? 1 : 0;\n    }\n  }\n}\n\nexport { nextStep };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\n\nconst CaveGenerate = () => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const width = Math.ceil(window.innerWidth / 8);\n    const height = Math.ceil(window.innerHeight / 8);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    // Rendering\n    const app: PIXI.Application = setRenderer();\n    const graphics = new PIXI.Graphics();\n\n    graphics.clear();\n    drawTiles(graphics, tileGrid);\n\n    app.stage.addChild(graphics);\n\n    // Update Logic\n    let frames = 0;\n    let stepCount = 0;\n    setUpdater(() => {\n      if (frames++ >= 10 && stepCount < 10) {\n        CaveGenerator.nextStep(\n          tileGrid,\n          stepCount < 4\n            ? { deathLimit: 3, birthLimit: 5 }\n            : { deathLimit: 4, birthLimit: 4 }\n        );\n\n        graphics.clear();\n        drawTiles(graphics, tileGrid);\n\n        stepCount++;\n        frames = 0;\n      }\n    });\n  }, []);\n\n  return <></>;\n};\n\nexport default CaveGenerate;\n","function getTileNumber(\n  x: number,\n  y: number,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  const topLeft =\n    y > 0 && x > 0 && tileGrid[y - 1][x - 1][0][0] === tileGrid[y][x][0][0];\n  const top = y > 0 && tileGrid[y - 1][x][0][0] === tileGrid[y][x][0][0];\n  const topRight =\n    y > 0 &&\n    x < tileGrid[0].length - 1 &&\n    tileGrid[y - 1][x + 1][0][0] === tileGrid[y][x][0][0];\n  const left = x > 0 && tileGrid[y][x - 1][0][0] === tileGrid[y][x][0][0];\n  const right =\n    x < tileGrid[0].length - 1 &&\n    tileGrid[y][x + 1][0][0] === tileGrid[y][x][0][0];\n  const bottomLeft =\n    y < tileGrid.length - 1 &&\n    x > 0 &&\n    tileGrid[y + 1][x - 1][0][0] === tileGrid[y][x][0][0];\n  const bottom =\n    y < tileGrid.length - 1 &&\n    tileGrid[y + 1][x][0][0] === tileGrid[y][x][0][0];\n  const bottomRight =\n    y < tileGrid.length - 1 &&\n    x < tileGrid[0].length - 1 &&\n    tileGrid[y + 1][x + 1][0][0] === tileGrid[y][x + 1][0][0];\n\n  if (!top && !left && right && bottom) return 1;\n  if (!top && left && right && bottom && !bottomLeft && bottomRight) return 41;\n  if (!top && left && right && bottom && !bottomLeft && !bottomRight) return 42;\n  if (!top && left && right && bottom && bottomLeft && !bottomRight) return 43;\n  if (!top && left && right && bottom) return 2;\n  if (!top && left && !right && bottom) return 3;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 4;\n  if (top && left && right && !bottom && !topLeft && topRight) return 51;\n  if (top && left && right && !bottom && topLeft && !topRight) return 53;\n  if (top && left && right && !bottom && !topLeft && !topRight) return 52;\n  if (top && left && right && !bottom) return 5;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 6;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 12;\n  if (top && !left && right && bottom && !topRight && bottomRight) return 36;\n  if (top && !left && right && bottom && !topRight && !bottomRight) return 37;\n  if (top && !left && right && bottom && topRight && !bottomRight) return 38;\n  if (top && !left && right && bottom) return 11;\n  if (top && left && !right && bottom && topLeft && !bottomLeft) return 44;\n  if (top && left && !right && bottom && !topLeft && !bottomLeft) return 45;\n  if (top && left && !right && bottom && !topLeft && bottomLeft) return 46;\n  if (top && left && !right && bottom) return 13;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 17;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 18;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 19;\n  if (top && !left && right && !bottom) return 21;\n  if (top && left && !right && !bottom) return 23;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 24;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 57;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 27;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 28;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 29;\n  if (!top && !left && right && !bottom) return 32;\n  if (!top && left && right && !bottom) return 33;\n  if (!top && left && !right && !bottom) return 34;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (!top && !left && !right && bottom) return 54;\n  if (top && !left && !right && bottom) return 55;\n  if (top && !left && !right && !bottom) return 56;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 35;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 35;\n\n  return 31;\n}\n\nfunction getWaterTileNumber(\n  x: number,\n  y: number,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  const waterLevel = Math.floor(33 - Math.min(tileGrid[y][x][1][0], 1) * 33);\n\n  if (\n    y < tileGrid.length - 1 &&\n    y > 0 &&\n    x < tileGrid[0].length - 1 &&\n    x > 0 &&\n    !tileGrid[y - 1][x][1][0] &&\n    tileGrid[y + 1][x][1][0] &&\n    ((tileGrid[y][x - 1][1][0] &&\n      tileGrid[y - 1][x - 1][1][0] &&\n      tileGrid[y][x - 1][1][0] < 1 &&\n      tileGrid[y - 1][x - 1][1][0] < 1 &&\n      tileGrid[y + 1][x + 1][1][0] < 1) ||\n      (tileGrid[y][x + 1][1][0] &&\n        tileGrid[y - 1][x + 1][1][0] &&\n        tileGrid[y][x + 1][1][0] < 1 &&\n        tileGrid[y - 1][x + 1][1][0] < 1 &&\n        tileGrid[y + 1][x - 1][1][0] < 1))\n  ) {\n    if (\n      tileGrid[y - 1][x - 1][1][0] &&\n      tileGrid[y - 1][x + 1][1][0] &&\n      (!tileGrid[y][x + 1][1][0] || tileGrid[y][x + 1][0][0]) &&\n      (!tileGrid[y][x - 1][1][0] || tileGrid[y][x - 1][0][0])\n    ) {\n      return 36;\n    } else if (tileGrid[y - 1][x - 1][1][0] && !tileGrid[y][x + 1][1][0]) {\n      return 35;\n    } else if (tileGrid[y - 1][x + 1][1][0] && !tileGrid[y][x - 1][1][0]) {\n      return 34;\n    }\n  }\n  if (\n    waterLevel <= 1 &&\n    (y === 0 || (!tileGrid[y - 1][x][0][0] && !tileGrid[y - 1][x][1][0]))\n  ) {\n    return 2;\n  } else if (y > 0 && tileGrid[y - 1][x][1][0] && !tileGrid[y - 1][x][0][0]) {\n    return 0;\n  } else {\n    return waterLevel;\n  }\n}\n\nexport { getTileNumber, getWaterTileNumber };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport { getTileNumber } from '../utils/Tile';\n\nconst CaveGenerateWithTexture = () => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const width = Math.ceil(window.innerWidth / 8);\n    const height = Math.ceil(window.innerHeight / 8);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    // Rendering\n    const app: PIXI.Application = setRenderer();\n    const graphics = new PIXI.Graphics();\n\n    graphics.clear();\n    drawTiles(graphics, tileGrid);\n\n    app.stage.addChild(graphics);\n\n    // Update Logic\n    let frames = 0;\n    let stepCount = 0;\n    setUpdater(() => {\n      if (frames++ >= 10 && stepCount < 10) {\n        CaveGenerator.nextStep(\n          tileGrid,\n          stepCount < 4\n            ? { deathLimit: 3, birthLimit: 5 }\n            : { deathLimit: 4, birthLimit: 4 }\n        );\n\n        graphics.clear();\n        drawTiles(graphics, tileGrid);\n\n        stepCount++;\n        frames = 0;\n\n        if (stepCount === 10) {\n          app.stage.removeChild(graphics);\n\n          const tileContainer = new PIXI.Container();\n          const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n            .fill(true)\n            .map(() => new Array(width));\n\n          for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n              const sprite = new PIXI.Sprite(\n                tileGrid[y][x][0][0]\n                  ? PIXI.Texture.from(\n                      `tiles/Tile_${getTileNumber(x, y, tileGrid)\n                        .toString()\n                        .padStart(2, '0')}.png`\n                    )\n                  : PIXI.Texture.from(`tiles/Tile_61.png`)\n              );\n              sprite.width = 8;\n              sprite.height = 8;\n              sprite.x = x * 8;\n              sprite.y = y * 8;\n              tileSprites[y][x] = sprite;\n              tileContainer.addChild(sprite);\n            }\n          }\n\n          app.stage.addChild(tileContainer);\n          tileContainer.cacheAsBitmap = true;\n        }\n      }\n    });\n  }, []);\n\n  return <></>;\n};\n\nexport default CaveGenerateWithTexture;\n","import { TileProperties } from '../interfaces';\n\nconst MIN_LIQUID_VALUE = 0.005;\nconst MAX_LIQUID_VALUE = 1.0;\nconst MAX_COMPRESSION = 0.125;\nconst MIN_FLOW = 0.005;\nconst MAX_FLOW = 4;\nconst FLOW_SPEED = 0.5;\n\nfunction calculateVerticalFlowValue(\n  remainingLiquid: number,\n  destination: [Uint8Array, Float64Array]\n): number {\n  const sum = remainingLiquid + destination[1][0];\n\n  if (sum <= MAX_LIQUID_VALUE) {\n    return MAX_LIQUID_VALUE;\n  } else if (sum < 2 * MAX_LIQUID_VALUE + MAX_COMPRESSION) {\n    return (\n      (MAX_LIQUID_VALUE * MAX_LIQUID_VALUE + sum * MAX_COMPRESSION) /\n      (MAX_LIQUID_VALUE + MAX_COMPRESSION)\n    );\n  } else {\n    return (sum + MAX_COMPRESSION) / 2;\n  }\n}\n\nfunction* liquidSimulateGenerator(\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  tileGridProperties: Array<Array<TileProperties>>,\n  limitDuration: number\n) {\n  let [accumulate, accumulateLimit] = [0, 5000];\n  let begin = Date.now();\n  let startValue: number;\n  let remainingValue: number;\n  let flow: number = 0;\n  let tile: [Uint8Array, Float64Array];\n\n  for (let y = 0; y < tileGridProperties.length; y++) {\n    for (let x = 0; x < tileGridProperties[0].length; x++) {\n      tileGridProperties[y][x].diff = 0;\n      if (++accumulate > accumulateLimit) {\n        accumulate = 0;\n        if (Date.now() - begin >= limitDuration) begin = yield;\n      }\n    }\n  }\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      tile = tileGrid[y][x];\n      startValue = tile[1][0];\n      remainingValue = tile[1][0];\n      flow = 0;\n\n      if (tile[0][0]) continue;\n      if (tile[1][0] === 0) continue;\n      if (tileGridProperties[y][x].isStable) continue;\n      if (tile[1][0] < MIN_LIQUID_VALUE) {\n        tile[1][0] = 0;\n        continue;\n      }\n\n      if (y < tileGrid.length - 1 && !tileGrid[y + 1][x][0][0]) {\n        flow =\n          calculateVerticalFlowValue(tile[1][0], tileGrid[y + 1][x]) -\n          tileGrid[y + 1][x][1][0];\n\n        if (tileGrid[y + 1][x][1][0] > 0 && flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, tile[1][0]))\n          flow = Math.min(MAX_FLOW, tile[1][0]);\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y + 1][x].diff += flow;\n          tileGridProperties[y + 1][x].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (x > 0 && !tileGrid[y][x - 1][0][0]) {\n        flow = (remainingValue - tileGrid[y][x - 1][1][0]) / 4;\n\n        if (flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue))\n          flow = Math.min(MAX_FLOW, remainingValue);\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y][x - 1].diff += flow;\n          tileGridProperties[y][x - 1].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (x < tileGrid[y].length - 1 && !tileGrid[y][x + 1][0][0]) {\n        flow = (remainingValue - tileGrid[y][x + 1][1][0]) / 3;\n        if (flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue))\n          flow = Math.min(MAX_FLOW, remainingValue);\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y][x + 1].diff += flow;\n          tileGridProperties[y][x + 1].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (y > 0 && !tileGrid[y - 1][x][0][0]) {\n        flow =\n          remainingValue -\n          calculateVerticalFlowValue(remainingValue, tileGrid[y - 1][x]);\n        if (flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue))\n          flow = Math.min(MAX_FLOW, remainingValue);\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y - 1][x].diff += flow;\n          tileGridProperties[y - 1][x].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (\n        startValue === remainingValue &&\n        ++tileGridProperties[y][x].stableLevel >= 10\n      ) {\n        tileGridProperties[y][x].isStable = true;\n      } else {\n        if (y > 0 && tileGrid[y - 1][x])\n          tileGridProperties[y - 1][x].isStable = false;\n        if (y < tileGrid.length - 1 && tileGrid[y + 1][x])\n          tileGridProperties[y + 1][x].isStable = false;\n        if (x > 0 && tileGrid[y][x - 1])\n          tileGridProperties[y][x - 1].isStable = false;\n        if (x < tileGrid[0].length - 1 && tileGrid[y][x + 1])\n          tileGridProperties[y][x + 1].isStable = false;\n      }\n      if (++accumulate > accumulateLimit) {\n        accumulate = 0;\n        if (Date.now() - begin >= limitDuration) begin = yield;\n      }\n    }\n  }\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      tileGrid[y][x][1][0] += tileGridProperties[y][x].diff;\n      if (tileGrid[y][x][1][0] < MIN_LIQUID_VALUE) {\n        tileGrid[y][x][1][0] = 0;\n      }\n      if (++accumulate > accumulateLimit) {\n        accumulate = 0;\n        if (Date.now() - begin >= limitDuration) begin = yield;\n      }\n    }\n  }\n\n  return;\n}\n\nfunction* stepGenerator(\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  tileGridProperties: Array<Array<TileProperties>>,\n  limitDuration: number = 3\n) {\n  let step = liquidSimulateGenerator(\n    tileGrid,\n    tileGridProperties,\n    limitDuration\n  );\n\n  while (true) {\n    if (step.next(Date.now()).done)\n      step = liquidSimulateGenerator(\n        tileGrid,\n        tileGridProperties,\n        limitDuration\n      );\n    yield;\n  }\n}\n\nexport { stepGenerator };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer, setUpdater } from '../utils';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport { getTileNumber, getWaterTileNumber } from '../utils/Tile';\nimport { TileProperties } from '../interfaces';\n\nconst LiquidSimulation = () => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const width = Math.ceil(window.innerWidth / 8);\n    const height = Math.ceil(window.innerHeight / 8);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        density: {\n          block: 0.5,\n          liquid: 0.5,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n    const tileGridProperties: Array<Array<TileProperties>> =\n      Map.createTileGridProperties(width, height);\n\n    for (let i = 0; i < 10; i++) {\n      CaveGenerator.nextStep(\n        tileGrid,\n        i < 4\n          ? { deathLimit: 3, birthLimit: 5 }\n          : { deathLimit: 4, birthLimit: 4 }\n      );\n    }\n\n    // Rendering\n    const app: PIXI.Application = setRenderer();\n    const backgroundContainer = new PIXI.Container();\n    const tileContainer = new PIXI.Container();\n    const waterContainer = new PIXI.Container();\n    const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n      .fill(true)\n      .map(() => new Array(width));\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (tileGrid[y][x][0][0]) {\n          const sprite = new PIXI.Sprite(\n            PIXI.Texture.from(\n              `tiles/Tile_${getTileNumber(x, y, tileGrid)\n                .toString()\n                .padStart(2, '0')}.png`\n            )\n          );\n          sprite.width = 8;\n          sprite.height = 8;\n          sprite.x = x * 8;\n          sprite.y = y * 8;\n          tileSprites[y][x] = sprite;\n          tileContainer.addChild(sprite);\n        } else {\n          const waterTileNumber = getWaterTileNumber(x, y, tileGrid);\n          const waterSprite = new PIXI.Sprite(\n            waterTileNumber >= 0\n              ? PIXI.Texture.from(\n                  `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                )\n              : PIXI.Texture.EMPTY\n          );\n          waterSprite.width = 8;\n          waterSprite.height = 8;\n          waterSprite.x = x * 8;\n          waterSprite.y = y * 8;\n          tileSprites[y][x] = waterSprite;\n          waterContainer.addChild(waterSprite);\n\n          const sprite = new PIXI.Sprite(\n            PIXI.Texture.from(`tiles/Tile_61.png`)\n          );\n          sprite.width = 8;\n          sprite.height = 8;\n          sprite.x = x * 8;\n          sprite.y = y * 8;\n          backgroundContainer.addChild(sprite);\n        }\n      }\n    }\n\n    app.stage.addChild(backgroundContainer);\n    app.stage.addChild(tileContainer);\n    app.stage.addChild(waterContainer);\n\n    backgroundContainer.cacheAsBitmap = true;\n    tileContainer.cacheAsBitmap = true;\n\n    // Update Logic\n    const step = LiquidSimulator.stepGenerator(tileGrid, tileGridProperties);\n\n    setUpdater(() => {\n      step.next();\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (!tileGrid[y][x][0][0]) {\n            const waterTileNumber = getWaterTileNumber(x, y, tileGrid);\n            tileSprites[y][x].texture =\n              tileGrid[y][x][1][0] && waterTileNumber >= 0\n                ? PIXI.Texture.from(\n                    `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                  )\n                : PIXI.Texture.EMPTY;\n            tileSprites[y][x].alpha = Math.min(\n              0.3 + tileGrid[y][x][1][0] * 0.15,\n              0.8\n            );\n          }\n        }\n      }\n    });\n  }, []);\n\n  return <></>;\n};\n\nexport default LiquidSimulation;\n","import * as PIXI from 'pixi.js';\n\nfunction createLabel(text: string): {\n  container: PIXI.Container;\n  label: PIXI.Text;\n} {\n  const labelContainer = new PIXI.Container();\n  const labelBackground = new PIXI.Graphics();\n  const label = new PIXI.Text(text, {\n    fontSize: 13,\n    fill: 0xffffff,\n  });\n\n  label.x = 1;\n  label.y = 1;\n\n  labelBackground.beginFill(0x000000, 0.5);\n  labelBackground.drawRect(0, 0, label.width + 2, label.height + 2);\n  labelBackground.endFill();\n  labelContainer.addChild(labelBackground);\n  labelContainer.addChild(label);\n\n  return {\n    container: labelContainer,\n    label,\n  };\n}\n\nexport { createLabel };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer, setUpdater } from '../utils';\nimport { createLabel } from '../utils/Label';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport { getTileNumber, getWaterTileNumber } from '../utils/Tile';\nimport { TileProperties } from '../interfaces';\n\nconst onTouch = (e: any) => {\n  const [x, y] = [\n    Math.floor(e.targetTouches[0].clientX / 8),\n    Math.floor(e.targetTouches[0].clientY / 8),\n  ];\n  spreadWater(x, y);\n};\n\nconst onClick = (e: any) => {\n  const [x, y] = [Math.floor(e.clientX / 8), Math.floor(e.clientY / 8)];\n  spreadWater(x, y);\n};\n\nlet callback: (x: number, y: number) => void;\nconst spreadWater = (x: number, y: number): void => {\n  if (callback) callback(x, y);\n};\n\nconst LiquidSimulation2 = () => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const width = Math.ceil(window.innerWidth / 8);\n    const height = Math.ceil(window.innerHeight / 8);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        density: {\n          block: 0.5,\n          liquid: 0,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n    const tileGridProperties: Array<Array<TileProperties>> =\n      Map.createTileGridProperties(width, height);\n\n    for (let i = 0; i < 10; i++) {\n      CaveGenerator.nextStep(\n        tileGrid,\n        i < 4\n          ? { deathLimit: 3, birthLimit: 5 }\n          : { deathLimit: 4, birthLimit: 4 }\n      );\n    }\n\n    // Event Listener\n    window.removeEventListener('touchstart', onTouch);\n    window.removeEventListener('click', onClick);\n    window.addEventListener('touchstart', onTouch);\n    window.addEventListener('click', onClick);\n    callback = (x, y) => {\n      for (let offsetY = -3; offsetY <= 3; offsetY++) {\n        for (let offsetX = -3; offsetX <= 3; offsetX++) {\n          if (\n            x + offsetX >= 0 &&\n            x + offsetX < width &&\n            y + offsetY >= 0 &&\n            y + offsetY < height &&\n            !tileGrid[y + offsetY][x + offsetX][0][0]\n          ) {\n            tileGrid[y + offsetY][x + offsetX][1][0] += 1;\n          }\n        }\n      }\n    };\n\n    // Rendering\n    const app: PIXI.Application = setRenderer();\n    const { container: labelContainer } = createLabel('Click to create water');\n    labelContainer.x = Math.round(\n      window.innerWidth / 2 - labelContainer.width / 2\n    );\n    labelContainer.y = 60;\n\n    const backgroundContainer = new PIXI.Container();\n    const tileContainer = new PIXI.Container();\n    const waterContainer = new PIXI.Container();\n    const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n      .fill(true)\n      .map(() => new Array(width));\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (tileGrid[y][x][0][0]) {\n          const sprite = new PIXI.Sprite(\n            PIXI.Texture.from(\n              `tiles/Tile_${getTileNumber(x, y, tileGrid)\n                .toString()\n                .padStart(2, '0')}.png`\n            )\n          );\n          sprite.width = 8;\n          sprite.height = 8;\n          sprite.x = x * 8;\n          sprite.y = y * 8;\n          tileSprites[y][x] = sprite;\n          tileContainer.addChild(sprite);\n        } else {\n          const waterTileNumber = getWaterTileNumber(x, y, tileGrid);\n          const waterSprite = new PIXI.Sprite(\n            waterTileNumber >= 0\n              ? PIXI.Texture.from(\n                  `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                )\n              : PIXI.Texture.EMPTY\n          );\n          waterSprite.width = 8;\n          waterSprite.height = 8;\n          waterSprite.x = x * 8;\n          waterSprite.y = y * 8;\n          tileSprites[y][x] = waterSprite;\n          waterContainer.addChild(waterSprite);\n\n          const sprite = new PIXI.Sprite(\n            PIXI.Texture.from(`tiles/Tile_61.png`)\n          );\n          sprite.width = 8;\n          sprite.height = 8;\n          sprite.x = x * 8;\n          sprite.y = y * 8;\n          backgroundContainer.addChild(sprite);\n        }\n      }\n    }\n\n    app.stage.addChild(backgroundContainer);\n    app.stage.addChild(tileContainer);\n    app.stage.addChild(waterContainer);\n    app.stage.addChild(labelContainer);\n\n    backgroundContainer.cacheAsBitmap = true;\n    tileContainer.cacheAsBitmap = true;\n\n    // Update Logic\n    const step = LiquidSimulator.stepGenerator(tileGrid, tileGridProperties);\n\n    setUpdater(() => {\n      step.next();\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (!tileGrid[y][x][0][0]) {\n            const waterTileNumber = getWaterTileNumber(x, y, tileGrid);\n            tileSprites[y][x].texture =\n              tileGrid[y][x][1][0] && waterTileNumber >= 0\n                ? PIXI.Texture.from(\n                    `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                  )\n                : PIXI.Texture.EMPTY;\n            tileSprites[y][x].alpha = Math.min(\n              0.3 + tileGrid[y][x][1][0] * 0.15,\n              0.8\n            );\n          }\n        }\n      }\n    });\n  }, []);\n\n  return <></>;\n};\n\nexport default LiquidSimulation2;\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { setRenderer, setUpdater } from '../utils';\nimport { createLabel } from '../utils/Label';\nimport * as Map from '../utils/Map';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport { getTileNumber, getWaterTileNumber } from '../utils/Tile';\nimport { TileProperties } from '../interfaces';\n\nconst onTouch = (e: any) => {\n  const [x, y] = [\n    Math.floor(e.targetTouches[0].clientX / 8),\n    Math.floor(e.targetTouches[0].clientY / 8),\n  ];\n  spreadWater(x, y);\n};\n\nconst onClick = (e: any) => {\n  const [x, y] = [Math.floor(e.clientX / 8), Math.floor(e.clientY / 8)];\n  spreadWater(x, y);\n};\n\nlet callback: (x: number, y: number) => void;\nconst spreadWater = (x: number, y: number): void => {\n  if (callback) callback(x, y);\n};\n\nconst LiquidStressTest = () => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const width = Math.ceil(window.innerWidth / 8);\n    const height = Math.ceil(window.innerHeight / 8);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        density: {\n          block: 0,\n          liquid: 1,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n    const tileGridProperties: Array<Array<TileProperties>> =\n      Map.createTileGridProperties(width, height);\n\n    // Event Listener\n    window.removeEventListener('touchstart', onTouch);\n    window.removeEventListener('click', onClick);\n    window.addEventListener('touchstart', onTouch);\n    window.addEventListener('click', onClick);\n    callback = (x, y) => {\n      for (let offsetY = -5; offsetY <= 5; offsetY++) {\n        for (let offsetX = -5; offsetX <= 5; offsetX++) {\n          if (\n            x + offsetX >= 0 &&\n            x + offsetX < width &&\n            y + offsetY >= 0 &&\n            y + offsetY < height &&\n            !tileGrid[y + offsetY][x + offsetX][0][0]\n          ) {\n            tileGrid[y + offsetY][x + offsetX][1][0] += 1;\n          }\n        }\n      }\n    };\n\n    // Rendering\n    const app: PIXI.Application = setRenderer();\n    const { container: labelContainer } = createLabel('Click to create water');\n    labelContainer.x = Math.round(\n      window.innerWidth / 2 - labelContainer.width / 2\n    );\n    labelContainer.y = 60;\n\n    const backgroundContainer = new PIXI.Container();\n    const tileContainer = new PIXI.Container();\n    const waterContainer = new PIXI.Container();\n    const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n      .fill(true)\n      .map(() => new Array(width));\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (tileGrid[y][x][0][0]) {\n          const sprite = new PIXI.Sprite(\n            PIXI.Texture.from(\n              `tiles/Tile_${getTileNumber(x, y, tileGrid)\n                .toString()\n                .padStart(2, '0')}.png`\n            )\n          );\n          sprite.width = 8;\n          sprite.height = 8;\n          sprite.x = x * 8;\n          sprite.y = y * 8;\n          tileSprites[y][x] = sprite;\n          tileContainer.addChild(sprite);\n        } else {\n          const waterTileNumber = getWaterTileNumber(x, y, tileGrid);\n          const waterSprite = new PIXI.Sprite(\n            waterTileNumber >= 0\n              ? PIXI.Texture.from(\n                  `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                )\n              : PIXI.Texture.EMPTY\n          );\n          waterSprite.width = 8;\n          waterSprite.height = 8;\n          waterSprite.x = x * 8;\n          waterSprite.y = y * 8;\n          tileSprites[y][x] = waterSprite;\n          waterContainer.addChild(waterSprite);\n\n          const sprite = new PIXI.Sprite(\n            PIXI.Texture.from(`tiles/Tile_61.png`)\n          );\n          sprite.width = 8;\n          sprite.height = 8;\n          sprite.x = x * 8;\n          sprite.y = y * 8;\n          backgroundContainer.addChild(sprite);\n        }\n      }\n    }\n\n    app.stage.addChild(backgroundContainer);\n    app.stage.addChild(tileContainer);\n    app.stage.addChild(waterContainer);\n    app.stage.addChild(labelContainer);\n\n    backgroundContainer.cacheAsBitmap = true;\n    tileContainer.cacheAsBitmap = true;\n\n    // Update Logic\n    const step = LiquidSimulator.stepGenerator(tileGrid, tileGridProperties);\n\n    setUpdater(() => {\n      step.next();\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (!tileGrid[y][x][0][0]) {\n            const waterTileNumber = getWaterTileNumber(x, y, tileGrid);\n            tileSprites[y][x].texture =\n              tileGrid[y][x][1][0] && waterTileNumber >= 0\n                ? PIXI.Texture.from(\n                    `waters/${waterTileNumber.toString().padStart(2, '0')}.png`\n                  )\n                : PIXI.Texture.EMPTY;\n            tileSprites[y][x].alpha = Math.min(\n              0.3 + tileGrid[y][x][1][0] * 0.15,\n              0.8\n            );\n          }\n        }\n      }\n    });\n  }, []);\n\n  return <></>;\n};\n\nexport default LiquidStressTest;\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { Line } from '../interfaces';\nimport { setRenderer } from '../utils';\nimport { drawLines, drawPoints } from '../utils/Graphics';\nimport { createLabel } from '../utils/Label';\nimport * as Collision from '../utils/Collision';\n\nconst LineIntersection = () => {\n  useEffect(() => {\n    // Render\n    const app: PIXI.Application = setRenderer();\n    const graphics = new PIXI.Graphics();\n    const [quarterWidth, quarterHeight] = [\n      Math.floor(window.innerWidth / 4),\n      Math.floor(window.innerHeight / 4),\n    ];\n\n    // Lines\n    const lineA: Line = [\n      [quarterWidth, quarterHeight],\n      [quarterWidth * 3, quarterHeight * 3],\n    ];\n    const lineB: Line = [\n      [quarterWidth * 3, quarterHeight],\n      [quarterWidth, quarterHeight * 3],\n    ];\n\n    // Draw Points\n    const points = [...lineA, ...lineB];\n    app.stage.addChild(graphics);\n\n    for (const point of points) {\n      const { container: pointContainer } = createLabel(`(${point})`);\n      pointContainer.position.set(...point);\n      app.stage.addChild(pointContainer);\n    }\n\n    graphics.clear();\n    drawLines(graphics, [lineA, lineB], 1, 0x009900);\n    drawPoints(graphics, points, 2);\n\n    // Line Intersection\n    const collisionDt: number = Collision.lineIntersection(lineA, lineB);\n    const collisionPoint: [number, number] = [\n      lineA[0][0] + (lineA[1][0] - lineA[0][0]) * collisionDt,\n      lineA[0][1] + (lineA[1][1] - lineA[0][1]) * collisionDt,\n    ];\n    drawPoints(graphics, [collisionPoint], 4, 0x5500ff);\n\n    const { container: pointContainer } = createLabel(\n      `Intersection at (${collisionPoint[0].toFixed(\n        2\n      )},${collisionPoint[1].toFixed(2)})`\n    );\n    pointContainer.position.set(...collisionPoint);\n    app.stage.addChild(pointContainer);\n  }, []);\n\n  return <></>;\n};\n\nexport default LineIntersection;\n","import { Line } from '../interfaces';\n\nfunction lineIntersection(lineA: Line, lineB: Line): number {\n  const det =\n    (lineA[1][0] - lineA[0][0]) * (lineB[1][1] - lineB[0][1]) -\n    (lineB[1][0] - lineB[0][0]) * (lineA[1][1] - lineA[0][1]);\n\n  if (det === 0) {\n    return -1;\n  } else {\n    const t1 =\n      ((lineB[1][1] - lineB[0][1]) * (lineB[1][0] - lineA[0][0]) +\n        (lineB[0][0] - lineB[1][0]) * (lineB[1][1] - lineA[0][1])) /\n      det;\n    const t2 =\n      ((lineA[0][1] - lineA[1][1]) * (lineB[1][0] - lineA[0][0]) +\n        (lineA[1][0] - lineA[0][0]) * (lineB[1][1] - lineA[0][1])) /\n      det;\n\n    return 0 <= t1 && t1 <= 1 && 0 <= t2 && t2 <= 1 ? t1 : -1;\n  }\n}\n\nexport { lineIntersection };\n","import { useEffect } from 'react';\n\nconst LineIntersection2 = () => {\n  useEffect(() => {}, []);\n\n  return <></>;\n};\n\nexport default LineIntersection2;\n","import { useEffect, useState } from 'react';\nimport { Route } from 'react-router';\nimport { Container } from 'rsuite';\nimport { preload, setRenderer } from './utils';\nimport CreatorTag from './components/CreatorTag';\nimport SideNavigation from './components/SideNavigation';\nimport ProgressBar from './components/ProgressBar';\nimport TilemapWithBuffer from './pages/TilemapWithBuffer';\nimport CaveGenerate from './pages/CaveGenerate';\nimport CaveGenerateWithTexture from './pages/CaveGenerateWithTexture';\nimport LiquidSimulation from './pages/LiquidSimulation';\nimport LiquidSimulation2 from './pages/LiquidSimulation2';\nimport LiquidStressTest from './pages/LiquidStressTest';\nimport LineIntersection from './pages/LineIntersection';\nimport LineIntersection2 from './pages/LineIntersection2';\n\nconst App = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [asset, setAsset] = useState('');\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setHide(false);\n      setRenderer();\n      await preload((percentage: number, assetName: string) => {\n        setPercentage(Math.round(percentage * 100));\n        setAsset(assetName);\n      });\n      setHide(true);\n    })();\n  }, []);\n\n  return (\n    <>\n      <Container style={{ height: '100%' }}>\n        <Container id='content'>\n          {hide && <Route exact path='/' component={TilemapWithBuffer} />}\n          {hide && (\n            <Route exact path='/cave-generate' component={CaveGenerate} />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/cave-generate-texture'\n              component={CaveGenerateWithTexture}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/liquid-simulation'\n              component={LiquidSimulation}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/liquid-simulation-2'\n              component={LiquidSimulation2}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/liquid-stress-test'\n              component={LiquidStressTest}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/line-intersection'\n              component={LineIntersection}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/line-intersection-2'\n              component={LineIntersection2}\n            />\n          )}\n          <CreatorTag />\n        </Container>\n        <ProgressBar hide={hide} asset={asset} percentage={percentage} />\n        <SideNavigation />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}