{"version":3,"sources":["utils/index.ts","components/CreatorTag.tsx","components/SideNavigation.tsx","components/ProgressBar.tsx","constants/index.ts","utils/Graphics.ts","utils/Map.ts","pages/TilemapWithBuffer.tsx","utils/CaveGenerator.ts","pages/CaveGenerate.tsx","utils/Tile.ts","pages/CaveGenerateWithTexture.tsx","pages/CaveGenerateWithSky.tsx","utils/LiquidSimulator.ts","pages/LiquidSimulation.tsx","utils/Label.ts","pages/LiquidSimulation2.tsx","pages/LiquidStressTest.tsx","utils/Collision.ts","pages/LineIntersection.tsx","pages/LineIntersection2.tsx","pages/DefaultLighting.tsx","App.tsx","utils/Lighting.ts","index.tsx"],"names":["updater","stage","lightContainer","preload","callback","a","assets","srcs","push","src","loaded","PIXI","shared","onLoad","add","resource","length","name","Promise","resolve","asset","load","setRenderer","options","defaultLighting","getClientSize","clientWidth","clientHeight","removeChildren","removeAllListeners","defaultLightingArea","beginFill","drawRect","endFill","addChild","cacheAsBitmap","resolution","window","devicePixelRatio","SCALE_MODE","NEAREST","MIPMAP_TEXTURES","OFF","STRICT_TEXTURE_CACHE","SPRITE_MAX_TEXTURES","stats","Stats","app","width","height","sharedLoader","powerPreference","backgroundColor","autoStart","antialias","forceCanvas","preserveDrawingBuffer","PIXI_LAYERS","view","className","style","dom","right","removeProperty","document","getElementById","appendChild","lightingStage","lightingLayer","useRenderTexture","clearColor","parentLayer","lightingSprite","getRenderTexture","blendMode","MULTIPLY","render","update","requestAnimationFrame","setUpdater","ratio","innerWidth","innerHeight","Math","min","ceil","CreatorTag","position","bottom","color","padding","href","SideNavigation","location","useLocation","history","useHistory","useState","toggle","setToggle","pathname","Sidebar","collapsible","overflow","onClick","e","stopPropagation","onTouchStart","Sidenav","Header","top","zIndex","Nav","Item","icon","Icon","Body","marginTop","activeKey","onSelect","eventKey","disabled","ProgressBar","hide","percentage","opacity","transitionProperty","transitionDuration","textAlign","Progress","Line","percent","status","TILE_SIZE","SAMPLE_POLYGON","drawTiles","graphics","tileGrid","tilesize","y","x","drawPoints","points","radius","point","drawCircle","drawLines","lines","lineStyle","begin","end","moveTo","lineTo","line","reset","create","splitSize","density","block","liquid","clearHeight","arrayBuffer","ArrayBuffer","i","properties","Uint8Array","Float32Array","tileType","random","size","Float64Array","byteLength","Error","arrayBufferGrid","Array","fill","map","tileGridY","tileGridX","merge","floor","baseY","offsetY","baseX","offsetX","createTileGridProperties","diff","isStable","stableLevel","TilemapWithBuffer","setCallback","useEffect","_x","_y","Map","clear","countAliveNeighbours","edgeCounting","index","aliveNeighbours","neighborX","neighborY","nextStep","afterGrid","deathLimit","birthLimit","clearSky","margin","alives","CaveGenerate","frames","stepCount","CaveGenerator","getTileNumber","topLeft","topRight","left","bottomLeft","bottomRight","getWaterTileNumber","waterLevel","getTileTextures","baseTexture","from","_v","getWaterTextures","CaveGenerateWithTexture","removeChild","tileContainer","uvs","tileParticleTextures","sprite","CaveGenerateWithSky","round","background","WHITE","tint","liquidSimulateGenerator","stepGenerator","MIN_LIQUID_VALUE","MAX_COMPRESSION","MIN_FLOW","FLOW_SPEED","calculateVerticalFlowValue","remainingLiquid","destination","sum","MAX_LIQUID_VALUE","tileGridProperties","limitDuration","accumulate","accumulateLimit","Date","now","flow","tile","startValue","remainingValue","max","step","next","done","LiquidSimulation","waterContainer","alpha","waterParticleTextures","tileSprites","waterTileNumber","waterSprite","LiquidSimulator","texture","createLabel","text","labelContainer","labelBackground","label","fontSize","container","LiquidSimulation2","LiquidStressTest","tileLabelContainer","lineIntersection","lineA","lineB","det","t1","t2","LineIntersection","quarterWidth","quarterHeight","pointContainer","set","collisionDt","Collision","collisionPoint","toFixed","LineIntersection2","dirty","scale","polygonLines","polygon","movableLine","beginContainer","endContainer","endLabel","collisionPointContainers","collisionPoints","cap","ROUND","collisionPointContainer","DefaultLighting","defaultLightingGraphic","defaultLightings","tileSize","lightingHeight","lightingDecrease","lightings","value","getDefaultLightings","area","App","setPercentage","setAsset","setHide","onTouch","targetTouches","clientX","clientY","removeEventListener","addEventListener","assetName","Container","id","exact","path","cb","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a097ffd6.chunk.js","sourcesContent":["import * as PIXI from 'pixi.js';\nimport * as PIXI_LAYERS from '@pixi/layers';\nimport Stats from 'stats.js';\n\nlet updater: () => void;\nlet stage: PIXI.Container;\nlet lightContainer: PIXI.Container;\n\nasync function preload(\n  callback: (percentage: number, assetName: string) => void\n): Promise<void> {\n  const BASE_URL: string =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3000/Ellie/build'\n      : 'https://simdaesoo.github.io/Ellie/build';\n  const assets: Array<[string, string]> = [];\n  const srcs: Array<string> = [];\n\n  srcs.push(`tiles.png`);\n  srcs.push(`waters.png`);\n\n  for (const src of srcs) {\n    assets.push([src, `${BASE_URL}/${src}`]);\n  }\n\n  let loaded = 0;\n\n  PIXI.Loader.shared.onLoad.add((...args: any) => {\n    const resource = args[1];\n    callback(++loaded / assets.length, resource.name);\n  });\n\n  return new Promise((resolve) => {\n    for (const asset of assets) {\n      PIXI.Loader.shared.add(...asset);\n    }\n\n    PIXI.Loader.shared.load(() => {\n      resolve();\n    });\n  });\n}\n\nfunction setRenderer(\n  options: { defaultLighting: boolean } = { defaultLighting: true }\n): {\n  stage: PIXI.Container;\n  lightContainer: PIXI.Container;\n} {\n  const [clientWidth, clientHeight] = getClientSize();\n  if (stage) {\n    stage.removeChildren();\n    stage.removeAllListeners();\n    lightContainer.removeChildren();\n    lightContainer.removeAllListeners();\n\n    if (options.defaultLighting) {\n      const defaultLightingArea = new PIXI.Graphics();\n      defaultLightingArea.beginFill(0xffffff);\n      defaultLightingArea.drawRect(0, 0, clientWidth, clientHeight);\n      defaultLightingArea.endFill();\n      lightContainer.addChild(defaultLightingArea);\n      defaultLightingArea.cacheAsBitmap = true;\n    }\n\n    return { stage, lightContainer };\n  }\n  const resolution: number = window.devicePixelRatio || 1;\n  PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n  PIXI.settings.MIPMAP_TEXTURES = PIXI.MIPMAP_MODES.OFF;\n  PIXI.settings.STRICT_TEXTURE_CACHE = true;\n  PIXI.settings.SPRITE_MAX_TEXTURES = 200;\n\n  const stats: Stats = new Stats();\n  const app = new PIXI.Application({\n    width: clientWidth,\n    height: clientHeight,\n    sharedLoader: true,\n    powerPreference: 'high-performance',\n    backgroundColor: 0x202020,\n    autoStart: false,\n    antialias: false,\n    forceCanvas: false,\n    preserveDrawingBuffer: false,\n    resolution,\n  });\n  app.stage = new PIXI_LAYERS.Stage();\n  app.view.className = 'renderer';\n  app.view.style.width = '100%';\n  app.view.style.height = '100%';\n  stats.dom.style.right = '0';\n  stats.dom.style.removeProperty('left');\n\n  const dom: HTMLElement = document.getElementById('content') as HTMLElement;\n  dom.appendChild(app.view);\n  dom.appendChild(stats.dom);\n\n  const lightingStage = new PIXI_LAYERS.Stage();\n  const lightingLayer = new PIXI_LAYERS.Layer();\n  lightingLayer.useRenderTexture = true;\n  lightingLayer.clearColor = [0.075, 0.075, 0.075, 1];\n\n  stage = new PIXI.Container();\n  lightContainer = new PIXI.Container();\n  lightContainer.parentLayer = lightingLayer;\n\n  const lightingSprite = new PIXI.Sprite(lightingLayer.getRenderTexture());\n  lightingSprite.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n  lightingStage.addChild(stage);\n  lightingStage.addChild(lightContainer);\n  lightingStage.addChild(lightingLayer);\n  lightingStage.addChild(lightingSprite);\n  app.stage.addChild(lightingStage);\n\n  if (options.defaultLighting) {\n    const defaultLightingArea = new PIXI.Graphics();\n    defaultLightingArea.beginFill(0xffffff);\n    defaultLightingArea.drawRect(0, 0, clientWidth, clientHeight);\n    defaultLightingArea.endFill();\n    lightContainer.addChild(defaultLightingArea);\n    defaultLightingArea.cacheAsBitmap = true;\n  }\n\n  const render = () => {\n    if (updater) updater();\n    stats.update();\n    app.render();\n    window.requestAnimationFrame(render);\n  };\n  window.requestAnimationFrame(render);\n\n  return { stage, lightContainer };\n}\n\nfunction setUpdater(callback: () => void): void {\n  updater = callback;\n}\n\nfunction getClientSize(): [number, number] {\n  const ratio = window.innerWidth / window.innerHeight;\n\n  return [\n    Math.min(1920, window.innerWidth),\n    Math.ceil(Math.min(1920, window.innerWidth) / ratio),\n  ];\n}\n\nexport { setRenderer, setUpdater, preload, getClientSize };\n","const CreatorTag = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        color: '#FFFFFF',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        padding: '1px 4px',\n      }}\n      className='noselect'\n    >\n      <a href='https://github.com/SimDaeSoo'>Created by daesoo94</a>\n    </div>\n  );\n};\n\nexport default CreatorTag;\n","import { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Sidenav, Nav, Sidebar, Icon } from 'rsuite';\n\nconst SideNavigation = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [toggle, setToggle] = useState(true);\n  const { pathname } = location;\n\n  return (\n    <Sidebar\n      collapsible\n      width={toggle ? 0 : 250}\n      style={{\n        position: 'absolute',\n        height: '100%',\n        overflow: 'auto',\n        backgroundColor: '#1a1d24',\n      }}\n      onClick={(e: any) => {\n        e.stopPropagation();\n      }}\n      onTouchStart={(e: any) => {\n        e.stopPropagation();\n      }}\n    >\n      <Sidenav>\n        <Sidenav.Header\n          style={{\n            position: 'fixed',\n            top: 0,\n            height: '50px',\n            width: toggle ? 56 : 250,\n            zIndex: 2,\n          }}\n        >\n          <Nav>\n            <Nav.Item\n              icon={<Icon icon={toggle ? 'external-link-square' : 'gears2'} />}\n              onClick={(e: any) => {\n                setToggle(!toggle);\n              }}\n              style={{ backgroundColor: '#0f131a' }}\n            >\n              {!toggle ? 'Ellie Engine v0.0.1' : '-'}\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Header>\n\n        <Sidenav.Body style={{ height: 'calc(100%-50px)', marginTop: '50px' }}>\n          <Nav activeKey={pathname}>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/')}\n              eventKey='/'\n            >\n              Tilemap With Buffer\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/cave-generate')}\n              eventKey='/cave-generate'\n            >\n              Cave Generate\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/cave-generate-texture')}\n              eventKey='/cave-generate-texture'\n            >\n              Cave With Texture\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='th2' />}\n              onSelect={() => history.push('/cave-generate-sky')}\n              eventKey='/cave-generate-sky'\n            >\n              Cave With Sky\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-simulation')}\n              eventKey='/liquid-simulation'\n            >\n              Liquid Simulation\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-simulation-2')}\n              eventKey='/liquid-simulation-2'\n            >\n              Liquid Simulation 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='tint' />}\n              onSelect={() => history.push('/liquid-stress-test')}\n              eventKey='/liquid-stress-test'\n            >\n              Liquid Stress Test\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='close' />}\n              onSelect={() => history.push('/line-intersection')}\n              eventKey='/line-intersection'\n            >\n              Line Intersection\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='close' />}\n              onSelect={() => history.push('/line-intersection-2')}\n              eventKey='/line-intersection-2'\n            >\n              Line Intersection 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/default-lighting')}\n              eventKey='/default-lighting'\n            >\n              Default Lighting\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-area')}\n              eventKey='/lighting-area'\n              disabled\n            >\n              Lighting Area\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-area-2')}\n              eventKey='/lighting-area-2'\n              disabled\n            >\n              Lighting Area 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='lightbulb-o' />}\n              onSelect={() => history.push('/lighting-stress-test')}\n              eventKey='/lighting-stress-test'\n              disabled\n            >\n              Lighting Stress Test\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-collision')}\n              eventKey='/aabb-collision'\n              disabled\n            >\n              AABB Collision\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-collision-2')}\n              eventKey='/aabb-collision-2'\n              disabled\n            >\n              AABB Collision 2\n            </Nav.Item>\n            <Nav.Item\n              icon={<Icon icon='object-ungroup' />}\n              onSelect={() => history.push('/aabb-stress-test')}\n              eventKey='/aabb-stress-test'\n              disabled\n            >\n              AABB Stress Test\n            </Nav.Item>\n\n            <Nav.Item\n              icon={<Icon icon='globe' />}\n              onSelect={() => history.push('/sample-world')}\n              eventKey='/sample-world'\n              disabled\n            >\n              Sample World\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </Sidebar>\n  );\n};\n\nexport default SideNavigation;\n","import { Progress } from 'rsuite';\n\nconst ProgressBar = ({\n  hide,\n  asset,\n  percentage,\n}: {\n  hide: boolean;\n  asset: string;\n  percentage: number;\n}) => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        position: 'absolute',\n        bottom: '20px',\n        opacity: hide ? 0 : 1,\n        transitionProperty: 'opacity',\n        transitionDuration: '1s',\n      }}\n    >\n      <div style={{ width: '100%', textAlign: 'center' }} className='noselect'>\n        Loading Asset : {asset}\n      </div>\n      <Progress.Line\n        className='notransition'\n        percent={percentage}\n        status={percentage === 100 ? 'success' : 'active'}\n      />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","const TILE_SIZE = 16;\nconst SAMPLE_POLYGON: Array<[number, number]> = [\n  [0.65125, 0.73125],\n  [0.6275, 0.7375],\n  [0.61, 0.735],\n  [0.5925, 0.72625],\n  [0.57875, 0.71875],\n  [0.56625, 0.71375],\n  [0.54875, 0.715],\n  [0.53125, 0.72],\n  [0.515, 0.7225],\n  [0.50125, 0.71625],\n  [0.48125, 0.7175],\n  [0.46375, 0.72625],\n  [0.44875, 0.73],\n  [0.4375, 0.7325],\n  [0.42625, 0.7325],\n  [0.425, 0.73625],\n  [0.43375, 0.755],\n  [0.44375, 0.76375],\n  [0.45625, 0.7725],\n  [0.4625, 0.77625],\n  [0.48, 0.7825],\n  [0.49875, 0.785],\n  [0.5125, 0.785],\n  [0.5275, 0.78125],\n  [0.53625, 0.78125],\n  [0.55125, 0.78375],\n  [0.56625, 0.785],\n  [0.5775, 0.785],\n  [0.5875, 0.785],\n  [0.60125, 0.7775],\n  [0.6175, 0.76375],\n  [0.6375, 0.74375],\n  [0.64625, 0.73625],\n  [0.65125, 0.73125],\n  [0.6375, 0.71875],\n  [0.6225, 0.7075],\n  [0.60875, 0.695],\n  [0.6, 0.68625],\n  [0.585, 0.67125],\n  [0.57875, 0.6675],\n  [0.5675, 0.66125],\n  [0.55875, 0.6625],\n  [0.54875, 0.665],\n  [0.535, 0.67375],\n  [0.52625, 0.67375],\n  [0.5125, 0.6675],\n  [0.50625, 0.66375],\n  [0.49125, 0.66625],\n  [0.47375, 0.67375],\n  [0.45875, 0.68875],\n  [0.44375, 0.7],\n  [0.43375, 0.70875],\n  [0.42125, 0.7175],\n  [0.4125, 0.71875],\n  [0.40375, 0.71875],\n  [0.4, 0.71625],\n  [0.405, 0.72125],\n  [0.41, 0.72375],\n  [0.41875, 0.7275],\n  [0.435, 0.72625],\n  [0.45125, 0.7225],\n  [0.47625, 0.6975],\n  [0.49125, 0.685],\n  [0.505, 0.66],\n  [0.5125, 0.63875],\n  [0.51375, 0.61875],\n  [0.50625, 0.60125],\n  [0.4975, 0.595],\n  [0.485, 0.59125],\n  [0.47375, 0.58875],\n  [0.4675, 0.58875],\n  [0.4625, 0.59125],\n  [0.4675, 0.6],\n  [0.4775, 0.60375],\n  [0.49, 0.61],\n  [0.505, 0.61125],\n  [0.5225, 0.6125],\n  [0.53375, 0.6125],\n  [0.545, 0.60625],\n  [0.55625, 0.59625],\n  [0.56625, 0.5925],\n  [0.575, 0.5925],\n  [0.5825, 0.59375],\n  [0.565, 0.605],\n  [0.55375, 0.61],\n  [0.54125, 0.61125],\n  [0.5325, 0.6125],\n  [0.565, 0.6125],\n  [0.58375, 0.61],\n  [0.59375, 0.60125],\n  [0.59875, 0.59375],\n  [0.59875, 0.58375],\n  [0.59625, 0.5725],\n  [0.5925, 0.565],\n  [0.58375, 0.55375],\n  [0.57, 0.54],\n  [0.565, 0.525],\n  [0.56125, 0.49],\n  [0.55875, 0.39],\n  [0.56125, 0.3375],\n  [0.5725, 0.29625],\n  [0.585, 0.2675],\n  [0.59625, 0.24625],\n  [0.615, 0.22375],\n  [0.64375, 0.20375],\n  [0.66875, 0.195],\n  [0.6875, 0.19],\n  [0.70875, 0.18875],\n  [0.7325, 0.19],\n  [0.7525, 0.1925],\n  [0.78875, 0.20375],\n  [0.81875, 0.21875],\n  [0.835, 0.2325],\n  [0.84375, 0.24625],\n  [0.85, 0.2675],\n  [0.8525, 0.2875],\n  [0.84875, 0.30375],\n  [0.83875, 0.32375],\n  [0.82625, 0.3375],\n  [0.8025, 0.35375],\n  [0.77125, 0.37375],\n  [0.74375, 0.38],\n  [0.71125, 0.3825],\n  [0.6825, 0.385],\n  [0.6625, 0.38375],\n  [0.64625, 0.38125],\n  [0.62875, 0.37875],\n  [0.615, 0.3725],\n  [0.6075, 0.3675],\n  [0.62625, 0.34375],\n  [0.64125, 0.33125],\n  [0.66125, 0.31375],\n  [0.68875, 0.3],\n  [0.715, 0.295],\n  [0.7525, 0.2925],\n  [0.77375, 0.29375],\n  [0.79625, 0.3],\n  [0.8125, 0.31],\n  [0.8275, 0.32375],\n  [0.83875, 0.33625],\n  [0.85, 0.35375],\n  [0.86875, 0.39125],\n  [0.87875, 0.4475],\n  [0.87625, 0.49375],\n  [0.87625, 0.54375],\n  [0.865, 0.5975],\n  [0.84625, 0.6525],\n  [0.82875, 0.69625],\n  [0.81125, 0.7375],\n  [0.77375, 0.7925],\n  [0.75, 0.815],\n  [0.70625, 0.85375],\n  [0.67125, 0.87875],\n  [0.6375, 0.89875],\n  [0.6075, 0.91125],\n  [0.57625, 0.9225],\n  [0.54375, 0.925],\n  [0.49875, 0.9275],\n  [0.48, 0.92375],\n  [0.45, 0.9175],\n  [0.4225, 0.90125],\n  [0.38625, 0.88375],\n  [0.3475, 0.8525],\n  [0.32, 0.8325],\n  [0.305, 0.825],\n  [0.295, 0.82125],\n  [0.28125, 0.81875],\n  [0.26125, 0.81875],\n  [0.245, 0.82375],\n  [0.22, 0.83125],\n  [0.20625, 0.84125],\n  [0.17875, 0.84625],\n  [0.1675, 0.8475],\n  [0.1575, 0.8525],\n  [0.1375, 0.85],\n  [0.12, 0.84375],\n  [0.09625, 0.83375],\n  [0.0675, 0.8175],\n  [0.04625, 0.8075],\n  [0.035, 0.80125],\n  [0.02625, 0.7975],\n  [0.0225, 0.7975],\n  [0.05625, 0.77625],\n  [0.09125, 0.7575],\n  [0.11375, 0.74625],\n  [0.1475, 0.7425],\n  [0.1625, 0.7425],\n  [0.18, 0.745],\n  [0.20125, 0.74875],\n  [0.21875, 0.75625],\n  [0.24, 0.76625],\n  [0.26375, 0.78],\n  [0.2825, 0.79375],\n  [0.30375, 0.81125],\n  [0.32125, 0.82625],\n  [0.32875, 0.83625],\n  [0.27375, 0.76875],\n  [0.2525, 0.72875],\n  [0.25125, 0.70875],\n  [0.265, 0.685],\n  [0.29375, 0.66625],\n  [0.32375, 0.6525],\n  [0.35375, 0.635],\n  [0.375, 0.61875],\n  [0.39625, 0.59375],\n  [0.4175, 0.5625],\n  [0.4275, 0.53625],\n  [0.43125, 0.5175],\n  [0.43125, 0.51125],\n  [0.4125, 0.52875],\n  [0.3975, 0.53375],\n  [0.3675, 0.53625],\n  [0.36, 0.53625],\n  [0.33375, 0.5375],\n  [0.315, 0.5425],\n  [0.29625, 0.5475],\n  [0.27875, 0.5625],\n  [0.25875, 0.58375],\n  [0.245, 0.60125],\n  [0.2375, 0.62125],\n  [0.2375, 0.645],\n  [0.2375, 0.6775],\n  [0.24125, 0.69625],\n  [0.24625, 0.71375],\n  [0.24875, 0.72375],\n  [0.25125, 0.72625],\n  [0.2325, 0.65],\n  [0.23125, 0.605],\n  [0.2325, 0.575],\n  [0.23375, 0.53625],\n  [0.235, 0.51],\n  [0.23625, 0.49625],\n  [0.26875, 0.5],\n  [0.28875, 0.49625],\n  [0.31375, 0.48875],\n  [0.34, 0.47875],\n  [0.36375, 0.465],\n  [0.3775, 0.4475],\n  [0.39875, 0.43],\n  [0.42375, 0.41375],\n  [0.4475, 0.40125],\n  [0.47, 0.38375],\n  [0.485, 0.3625],\n  [0.49375, 0.33625],\n  [0.4975, 0.31],\n  [0.48375, 0.27875],\n  [0.46625, 0.26],\n  [0.45, 0.25125],\n  [0.4325, 0.25],\n  [0.41, 0.25125],\n  [0.39125, 0.25875],\n  [0.35875, 0.27875],\n  [0.335, 0.2875],\n  [0.315, 0.29125],\n  [0.2975, 0.29],\n  [0.28125, 0.28125],\n  [0.2575, 0.265],\n  [0.23, 0.245],\n  [0.20375, 0.23125],\n  [0.1825, 0.225],\n  [0.1675, 0.22375],\n  [0.15875, 0.2225],\n  [0.18625, 0.20375],\n  [0.23375, 0.19],\n  [0.2625, 0.185],\n  [0.29625, 0.1775],\n  [0.3275, 0.1775],\n  [0.35625, 0.18375],\n  [0.375, 0.195],\n  [0.3925, 0.21125],\n  [0.40875, 0.22875],\n  [0.41875, 0.24875],\n  [0.42375, 0.2725],\n  [0.4275, 0.30375],\n  [0.43125, 0.33125],\n  [0.42375, 0.35125],\n  [0.40625, 0.36875],\n  [0.38, 0.37875],\n  [0.3625, 0.38375],\n  [0.335, 0.38],\n  [0.32, 0.365],\n  [0.3025, 0.34625],\n  [0.2875, 0.33875],\n  [0.27375, 0.33625],\n  [0.2375, 0.33625],\n  [0.21625, 0.32875],\n  [0.19625, 0.32125],\n  [0.1775, 0.3075],\n  [0.16125, 0.29375],\n  [0.14875, 0.27375],\n  [0.13875, 0.25625],\n  [0.135, 0.24],\n  [0.1425, 0.235],\n  [0.16125, 0.23625],\n  [0.1725, 0.24375],\n  [0.18875, 0.25875],\n  [0.1975, 0.2725],\n  [0.21375, 0.28875],\n  [0.22375, 0.2975],\n  [0.24125, 0.30375],\n  [0.255, 0.3075],\n  [0.2775, 0.3075],\n  [0.29875, 0.3075],\n  [0.30875, 0.31375],\n  [0.32125, 0.325],\n  [0.3275, 0.34625],\n  [0.3275, 0.3725],\n  [0.325, 0.395],\n  [0.32125, 0.4075],\n  [0.31625, 0.43125],\n  [0.31375, 0.45],\n  [0.305, 0.47],\n  [0.29, 0.485],\n  [0.27375, 0.4875],\n  [0.24875, 0.4875],\n  [0.2325, 0.485],\n  [0.21875, 0.475],\n  [0.21, 0.4625],\n  [0.1975, 0.44],\n  [0.18875, 0.405],\n  [0.1825, 0.37625],\n  [0.17375, 0.35125],\n  [0.16, 0.32375],\n  [0.14375, 0.2975],\n  [0.125, 0.27625],\n  [0.115, 0.26375],\n  [0.0975, 0.25375],\n  [0.08625, 0.25125],\n  [0.07375, 0.2525],\n  [0.06625, 0.255],\n  [0.0625, 0.26875],\n  [0.0625, 0.2825],\n  [0.07125, 0.295],\n  [0.0775, 0.3025],\n  [0.0925, 0.3175],\n  [0.10125, 0.3275],\n  [0.1125, 0.3375],\n  [0.1225, 0.35375],\n  [0.12625, 0.3725],\n  [0.12875, 0.3925],\n  [0.13375, 0.41125],\n  [0.14125, 0.425],\n  [0.1525, 0.44],\n  [0.1675, 0.455],\n  [0.18, 0.46625],\n  [0.1975, 0.47625],\n  [0.215, 0.4875],\n  [0.2275, 0.48875],\n  [0.24375, 0.49375],\n  [0.25375, 0.495],\n  [0.27875, 0.49125],\n  [0.2925, 0.4875],\n  [0.31125, 0.47375],\n  [0.34, 0.44375],\n  [0.34375, 0.415],\n  [0.35125, 0.38875],\n  [0.35625, 0.35625],\n  [0.36375, 0.32375],\n  [0.36875, 0.2925],\n  [0.3675, 0.26],\n  [0.3625, 0.24125],\n  [0.355, 0.22625],\n  [0.34125, 0.21125],\n  [0.33, 0.20375],\n  [0.30875, 0.19625],\n  [0.29125, 0.195],\n  [0.27625, 0.1975],\n  [0.265, 0.2],\n  [0.2575, 0.20875],\n  [0.2575, 0.22375],\n  [0.26, 0.23875],\n  [0.26875, 0.24875],\n  [0.27875, 0.25375],\n  [0.2925, 0.25875],\n  [0.30625, 0.26125],\n  [0.32125, 0.25875],\n  [0.32875, 0.255],\n  [0.3375, 0.24875],\n  [0.3425, 0.24125],\n  [0.34125, 0.23125],\n  [0.32875, 0.22],\n  [0.31875, 0.215],\n  [0.3025, 0.21],\n  [0.2925, 0.20875],\n  [0.2825, 0.2125],\n  [0.28125, 0.225],\n  [0.28875, 0.23375],\n  [0.2975, 0.23625],\n  [0.30875, 0.2375],\n  [0.315, 0.23375],\n  [0.315, 0.2275],\n  [0.31125, 0.2225],\n  [0.305, 0.22],\n  [0.29875, 0.22125],\n  [0.29625, 0.225],\n  [0.29625, 0.22625],\n];\n\nexport { SAMPLE_POLYGON, TILE_SIZE };\n","import * as PIXI from 'pixi.js';\nimport { Line } from '../interfaces';\n\nfunction drawTiles(\n  graphics: PIXI.Graphics,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  tilesize: number = 8,\n  color: number = 0x666666\n): void {\n  graphics.beginFill(color);\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      if (tileGrid[y][x][0][0]) {\n        graphics.drawRect(x * tilesize, y * tilesize, tilesize, tilesize);\n      }\n    }\n  }\n  graphics.endFill();\n}\n\nfunction drawPoints(\n  graphics: PIXI.Graphics,\n  points: Array<[number, number]>,\n  radius: number = 1,\n  color: number = 0xff0000\n): void {\n  graphics.beginFill(color);\n\n  for (const point of points) {\n    graphics.drawCircle(point[0], point[1], radius);\n  }\n\n  graphics.endFill();\n}\n\nfunction drawLines(\n  graphics: PIXI.Graphics,\n  lines: Array<Line>,\n  options: PIXI.ILineStyleOptions = { width: 1, color: 0x00ff00 }\n) {\n  graphics.lineStyle(options);\n\n  for (const [begin, end] of lines) {\n    graphics.moveTo(...begin);\n    graphics.lineTo(...end);\n  }\n\n  graphics.endFill();\n  graphics.line.reset();\n}\n\nexport { drawTiles, drawPoints, drawLines };\n","import { TileProperties } from '../interfaces';\n\nconst TILE_BYTES = 8;\n\nfunction create(\n  width: number,\n  height: number,\n  options?: {\n    splitSize: number;\n    clearHeight: number;\n    density: {\n      block: number;\n      liquid: number;\n    };\n  }\n): Array<Array<ArrayBuffer>> {\n  const {\n    splitSize = 0,\n    density = { block: 0.5, liquid: 0.5 },\n    clearHeight = 0,\n  } = options || {};\n\n  if (splitSize === 0) {\n    const arrayBuffer = new ArrayBuffer(width * height * TILE_BYTES + 16);\n\n    for (let i = 0; i < width * height; i++) {\n      const properties = new Uint8Array(arrayBuffer, i * TILE_BYTES, 4);\n      const liquid = new Float32Array(arrayBuffer, i * TILE_BYTES + 4, 1);\n      const tileType =\n        i > width * clearHeight && Math.random() < density.block ? 1 : 0;\n\n      properties[0] = tileType; // tileType\n      properties[1] = 0; // backgroundType\n      properties[2] = 0; // liquidType\n      properties[3] = 0; // something...\n      liquid[0] = tileType === 0 && Math.random() < density.liquid ? 1 : 0; // liquid\n    }\n\n    const size = new Float64Array(arrayBuffer, arrayBuffer.byteLength - 16, 2);\n    size[0] = height; // height\n    size[1] = width; // width\n\n    return [[arrayBuffer]];\n  } else if (width % splitSize !== 0 || height % splitSize !== 0) {\n    throw new Error(\n      'width and height must be perfectly was divided by split size'\n    );\n  } else {\n    const arrayBufferGrid = new Array(height / splitSize)\n      .fill(true)\n      .map(() => new Array(width / splitSize));\n\n    for (let tileGridY = 0; tileGridY < height / splitSize; tileGridY++) {\n      for (let tileGridX = 0; tileGridX < width / splitSize; tileGridX++) {\n        const arrayBuffer = new ArrayBuffer(splitSize ** 2 * TILE_BYTES + 16);\n\n        for (let i = 0; i < splitSize ** 2; i++) {\n          const properties = new Uint8Array(arrayBuffer, i * TILE_BYTES, 4);\n          const liquid = new Float32Array(arrayBuffer, i * TILE_BYTES + 4, 1);\n          const tileType =\n            i > width * clearHeight && Math.random() < density.block ? 1 : 0;\n\n          properties[0] = tileType; // tileType\n          properties[1] = 0; // backgroundType\n          properties[2] = 0; // liquidType\n          properties[3] = 0; // something...\n          liquid[0] = tileType === 0 && Math.random() < density.liquid ? 1 : 0; // liquid\n        }\n\n        const size = new Float64Array(\n          arrayBuffer,\n          arrayBuffer.byteLength - 16,\n          2\n        );\n        size[0] = splitSize; // height\n        size[1] = splitSize; // width\n\n        arrayBufferGrid[tileGridY][tileGridX] = arrayBuffer;\n      }\n    }\n\n    return arrayBufferGrid;\n  }\n}\n\nfunction merge(\n  arrayBufferGrid: Array<Array<ArrayBuffer>>\n): Array<Array<[Uint8Array, Float64Array]>> {\n  const size = new Float64Array(\n    arrayBufferGrid[0][0],\n    arrayBufferGrid[0][0].byteLength - 16,\n    2\n  );\n  const height = size[0];\n  const width = size[1];\n  const tileGrid = new Array(height * arrayBufferGrid.length)\n    .fill(true)\n    .map(() => new Array(width * arrayBufferGrid[0].length));\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    const [baseY, offsetY] = [Math.floor(y / height), y % height];\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      const [baseX, offsetX] = [Math.floor(x / width), x % width];\n\n      tileGrid[y][x] = [\n        new Uint8Array(\n          arrayBufferGrid[baseY][baseX],\n          (offsetY * width + offsetX) * TILE_BYTES,\n          4\n        ),\n        new Float32Array(\n          arrayBufferGrid[baseY][baseX],\n          (offsetY * width + offsetX) * TILE_BYTES + 4,\n          1\n        ),\n      ];\n    }\n  }\n\n  return tileGrid;\n}\n\nfunction createTileGridProperties(\n  width: number,\n  height: number\n): Array<Array<TileProperties>> {\n  const tileGridProperties: Array<Array<TileProperties>> = new Array(height)\n    .fill(true)\n    .map(() =>\n      new Array(width)\n        .fill(true)\n        .map(() => ({ diff: 0, isStable: false, stableLevel: 0 }))\n    );\n\n  return tileGridProperties;\n}\n\nexport { create, merge, createTileGridProperties };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { TILE_SIZE } from '../constants';\nimport { getClientSize, setRenderer } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\n\nconst TilemapWithBuffer = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {});\n\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    // Rendering\n    const { stage } = setRenderer();\n    const graphics = new PIXI.Graphics();\n\n    graphics.clear();\n    drawTiles(graphics, tileGrid, TILE_SIZE);\n\n    stage.addChild(graphics);\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default TilemapWithBuffer;\n","// https://gamedevelopment.tutsplus.com/tutorials/generate-random-cave-levels-using-cellular-automata--gamedev-9664\n\nfunction countAliveNeighbours(\n  x: number,\n  y: number,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  length: number = 1,\n  edgeCounting: boolean = true,\n  index: number = 0\n): number {\n  let aliveNeighbours = 0;\n\n  for (let offsetY = -length; offsetY <= length; offsetY++) {\n    for (let offsetX = -length; offsetX <= length; offsetX++) {\n      const neighborX: number = x + offsetX;\n      const neighborY: number = y + offsetY;\n\n      if (\n        edgeCounting &&\n        !(offsetX === 0 && offsetY === 0) &&\n        (neighborX < 0 ||\n          neighborY < 0 ||\n          neighborX >= tileGrid[0].length ||\n          neighborY >= tileGrid.length)\n      ) {\n        aliveNeighbours++;\n      } else if (\n        !(offsetX === 0 && offsetY === 0) &&\n        neighborX >= 0 &&\n        neighborY >= 0 &&\n        neighborX < tileGrid[0].length &&\n        neighborY < tileGrid.length &&\n        tileGrid[neighborY][neighborX][0][index]\n      ) {\n        aliveNeighbours++;\n      }\n    }\n  }\n\n  return aliveNeighbours;\n}\n\nfunction nextStep(\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  options: {\n    deathLimit: number;\n    birthLimit: number;\n    clearSky: boolean;\n    margin: number;\n  }\n): void {\n  const afterGrid: Array<Array<boolean>> = new Array(tileGrid.length)\n    .fill(true)\n    .map(() => new Array(tileGrid[0].length).fill(false));\n  const { deathLimit, birthLimit, clearSky, margin } = options;\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[0].length; x++) {\n      const alives: number = countAliveNeighbours(\n        x,\n        y,\n        tileGrid,\n        1,\n        clearSky ? y > birthLimit : true\n      );\n\n      if (tileGrid[y][x][0][0]) {\n        if (alives < birthLimit) {\n          afterGrid[y][x] = false;\n        } else {\n          afterGrid[y][x] = true;\n        }\n      } else {\n        if (alives > deathLimit) {\n          afterGrid[y][x] = true;\n        } else {\n          afterGrid[y][x] = false;\n        }\n      }\n    }\n  }\n\n  let baseY: number = 0;\n\n  for (let y = 0; y < afterGrid.length; y++) {\n    for (let x = 0; x < afterGrid[0].length; x++) {\n      const alives = countAliveNeighbours(x, y, tileGrid, 1, false, 1);\n      if (!baseY && alives) baseY = y + margin;\n\n      tileGrid[y][x][0][0] = afterGrid[y][x] ? 1 : 0;\n      tileGrid[y][x][0][1] = tileGrid[y][afterGrid[0].length - 1 - x][0][0]\n        ? 1\n        : alives > 4\n        ? 1\n        : 0;\n      if (\n        baseY &&\n        baseY <= y &&\n        !tileGrid[y][afterGrid[0].length - 1 - x][0][0]\n      ) {\n        tileGrid[y][x][0][1] = 2;\n      }\n    }\n  }\n}\n\nexport { nextStep };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { getClientSize, setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport { TILE_SIZE } from '../constants';\n\nconst CaveGenerate = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {});\n\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    // Rendering\n    const { stage } = setRenderer();\n    const graphics = new PIXI.Graphics();\n\n    graphics.clear();\n    drawTiles(graphics, tileGrid, TILE_SIZE);\n\n    stage.addChild(graphics);\n\n    // Update Logic\n    let frames = 0;\n    let stepCount = 0;\n    setUpdater(() => {\n      if (frames++ >= 10 && stepCount < 10) {\n        CaveGenerator.nextStep(\n          tileGrid,\n          stepCount < 4\n            ? { deathLimit: 3, birthLimit: 5, clearSky: false, margin: 0 }\n            : { deathLimit: 4, birthLimit: 4, clearSky: false, margin: 0 }\n        );\n\n        graphics.clear();\n        drawTiles(graphics, tileGrid, TILE_SIZE);\n\n        stepCount++;\n        frames = 0;\n      }\n    });\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default CaveGenerate;\n","import * as PIXI from 'pixi.js';\n\nfunction getTileNumber(\n  x: number,\n  y: number,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  const topLeft =\n    y > 0 && x > 0 && tileGrid[y - 1][x - 1][0][0] === tileGrid[y][x][0][0];\n  const top = y > 0 && tileGrid[y - 1][x][0][0] === tileGrid[y][x][0][0];\n  const topRight =\n    y > 0 &&\n    x < tileGrid[0].length - 1 &&\n    tileGrid[y - 1][x + 1][0][0] === tileGrid[y][x][0][0];\n  const left = x > 0 && tileGrid[y][x - 1][0][0] === tileGrid[y][x][0][0];\n  const right =\n    x < tileGrid[0].length - 1 &&\n    tileGrid[y][x + 1][0][0] === tileGrid[y][x][0][0];\n  const bottomLeft =\n    y < tileGrid.length - 1 &&\n    x > 0 &&\n    tileGrid[y + 1][x - 1][0][0] === tileGrid[y][x][0][0];\n  const bottom =\n    y < tileGrid.length - 1 &&\n    tileGrid[y + 1][x][0][0] === tileGrid[y][x][0][0];\n  const bottomRight =\n    y < tileGrid.length - 1 &&\n    x < tileGrid[0].length - 1 &&\n    tileGrid[y + 1][x + 1][0][0] === tileGrid[y][x + 1][0][0];\n\n  if (!top && !left && right && bottom) return 0;\n  if (!top && left && right && bottom && !bottomLeft && bottomRight) return 40;\n  if (!top && left && right && bottom && !bottomLeft && !bottomRight) return 41;\n  if (!top && left && right && bottom && bottomLeft && !bottomRight) return 42;\n  if (!top && left && right && bottom) return 1;\n  if (!top && left && !right && bottom) return 2;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 3;\n  if (top && left && right && !bottom && !topLeft && topRight) return 50;\n  if (top && left && right && !bottom && topLeft && !topRight) return 52;\n  if (top && left && right && !bottom && !topLeft && !topRight) return 51;\n  if (top && left && right && !bottom) return 4;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 5;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 11;\n  if (top && !left && right && bottom && !topRight && bottomRight) return 35;\n  if (top && !left && right && bottom && !topRight && !bottomRight) return 36;\n  if (top && !left && right && bottom && topRight && !bottomRight) return 37;\n  if (top && !left && right && bottom) return 10;\n  if (top && left && !right && bottom && topLeft && !bottomLeft) return 43;\n  if (top && left && !right && bottom && !topLeft && !bottomLeft) return 44;\n  if (top && left && !right && bottom && !topLeft && bottomLeft) return 45;\n  if (top && left && !right && bottom) return 12;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 16;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 17;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 18;\n  if (top && !left && right && !bottom) return 20;\n  if (top && left && !right && !bottom) return 22;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 23;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 56;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 26;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    bottomLeft &&\n    bottomRight\n  )\n    return 27;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 28;\n  if (!top && !left && right && !bottom) return 31;\n  if (!top && left && right && !bottom) return 32;\n  if (!top && left && !right && !bottom) return 33;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 34;\n  if (!top && !left && !right && bottom) return 53;\n  if (top && !left && !right && bottom) return 54;\n  if (top && !left && !right && !bottom) return 55;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 34;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    topRight &&\n    !bottomLeft &&\n    !bottomRight\n  )\n    return 34;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    bottomLeft &&\n    !bottomRight\n  )\n    return 34;\n  if (\n    top &&\n    left &&\n    right &&\n    bottom &&\n    !topLeft &&\n    !topRight &&\n    !bottomLeft &&\n    bottomRight\n  )\n    return 34;\n\n  return 30;\n}\n\nfunction getWaterTileNumber(\n  x: number,\n  y: number,\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>\n): number {\n  const waterLevel = Math.floor(33 - Math.min(tileGrid[y][x][1][0], 1) * 33);\n\n  if (\n    y < tileGrid.length - 1 &&\n    y > 0 &&\n    x < tileGrid[0].length - 1 &&\n    x > 0 &&\n    !tileGrid[y - 1][x][1][0] &&\n    tileGrid[y + 1][x][1][0] &&\n    ((tileGrid[y][x - 1][1][0] &&\n      tileGrid[y - 1][x - 1][1][0] &&\n      tileGrid[y][x - 1][1][0] < 1 &&\n      tileGrid[y - 1][x - 1][1][0] < 1 &&\n      tileGrid[y + 1][x + 1][1][0] < 1) ||\n      (tileGrid[y][x + 1][1][0] &&\n        tileGrid[y - 1][x + 1][1][0] &&\n        tileGrid[y][x + 1][1][0] < 1 &&\n        tileGrid[y - 1][x + 1][1][0] < 1 &&\n        tileGrid[y + 1][x - 1][1][0] < 1))\n  ) {\n    if (\n      tileGrid[y - 1][x - 1][1][0] &&\n      tileGrid[y - 1][x + 1][1][0] &&\n      (!tileGrid[y][x + 1][1][0] || tileGrid[y][x + 1][0][0]) &&\n      (!tileGrid[y][x - 1][1][0] || tileGrid[y][x - 1][0][0])\n    ) {\n      return 36;\n    } else if (tileGrid[y - 1][x - 1][1][0] && !tileGrid[y][x + 1][1][0]) {\n      return 35;\n    } else if (tileGrid[y - 1][x + 1][1][0] && !tileGrid[y][x - 1][1][0]) {\n      return 34;\n    }\n  }\n  if (\n    waterLevel <= 1 &&\n    (y === 0 || (!tileGrid[y - 1][x][0][0] && !tileGrid[y - 1][x][1][0]))\n  ) {\n    return 2;\n  } else if (y > 0 && tileGrid[y - 1][x][1][0] && !tileGrid[y - 1][x][0][0]) {\n    return 0;\n  } else {\n    return waterLevel;\n  }\n}\n\nfunction getTileTextures(): Array<PIXI.Texture> {\n  const baseTexture = PIXI.Texture.from(`tiles.png`).baseTexture;\n\n  return new Array(63).fill(true).map((_v, i) => {\n    const [x, y] = [i % 9, Math.floor(i / 9)];\n    return new PIXI.Texture(\n      baseTexture,\n      new PIXI.Rectangle(x * 16 + (x + 1), y * 16 + (y + 1), 16, 16)\n    );\n  });\n}\n\nfunction getWaterTextures(): Array<PIXI.Texture> {\n  const baseTexture = PIXI.Texture.from(`waters.png`).baseTexture;\n\n  return new Array(38).fill(true).map((_v, i) => {\n    const [x, y] = [i % 13, Math.floor(i / 13)];\n    return new PIXI.Texture(\n      baseTexture,\n      new PIXI.Rectangle(x * 16 + (x + 1), y * 16 + (y + 1), 16, 16)\n    );\n  });\n}\n\nexport { getTileNumber, getWaterTileNumber, getTileTextures, getWaterTextures };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { getClientSize, setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport { getTileNumber, getTileTextures } from '../utils/Tile';\nimport { TILE_SIZE } from '../constants';\n\nconst CaveGenerateWithTexture = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {});\n\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    // Rendering\n    const { stage } = setRenderer();\n    const graphics = new PIXI.Graphics();\n\n    graphics.clear();\n    drawTiles(graphics, tileGrid, TILE_SIZE);\n\n    stage.addChild(graphics);\n\n    // Update Logic\n    let frames = 0;\n    let stepCount = 0;\n    setUpdater(() => {\n      if (frames++ >= 10 && stepCount < 10) {\n        CaveGenerator.nextStep(\n          tileGrid,\n          stepCount < 4\n            ? { deathLimit: 3, birthLimit: 5, clearSky: false, margin: 0 }\n            : { deathLimit: 4, birthLimit: 4, clearSky: false, margin: 0 }\n        );\n\n        graphics.clear();\n        drawTiles(graphics, tileGrid, TILE_SIZE);\n\n        stepCount++;\n        frames = 0;\n\n        if (stepCount === 10) {\n          stage.removeChild(graphics);\n\n          // const tileContainer = new PIXI.Container();\n          const tileContainer = new PIXI.ParticleContainer(width * height * 2, {\n            uvs: true,\n            position: false,\n          });\n          const tileParticleTextures = getTileTextures();\n\n          for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n              if (tileGrid[y][x][0][0]) {\n                const sprite = new PIXI.Sprite(\n                  tileParticleTextures[getTileNumber(x, y, tileGrid)]\n                );\n                sprite.width = TILE_SIZE;\n                sprite.height = TILE_SIZE;\n                sprite.x = x * TILE_SIZE;\n                sprite.y = y * TILE_SIZE;\n                tileContainer.addChild(sprite);\n              } else if (tileGrid[y][x][0][1]) {\n                const sprite = new PIXI.Sprite(\n                  tileGrid[y][x][0][1] === 1\n                    ? tileParticleTextures[60]\n                    : tileParticleTextures[61]\n                );\n                sprite.width = TILE_SIZE;\n                sprite.height = TILE_SIZE;\n                sprite.x = x * TILE_SIZE;\n                sprite.y = y * TILE_SIZE;\n                tileContainer.addChild(sprite);\n              }\n            }\n          }\n\n          stage.addChild(tileContainer);\n          // tileContainer.cacheAsBitmap = true;\n        }\n      }\n    });\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default CaveGenerateWithTexture;\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { getClientSize, setRenderer, setUpdater } from '../utils';\nimport { drawTiles } from '../utils/Graphics';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport { getTileNumber, getTileTextures } from '../utils/Tile';\nimport { TILE_SIZE } from '../constants';\n\nconst CaveGenerateWithSky = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {});\n\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        clearHeight: Math.round(height / 4),\n        density: {\n          block: 0.5,\n          liquid: 0.5,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    // Rendering\n    const { stage } = setRenderer();\n    const graphics = new PIXI.Graphics();\n    const background = new PIXI.Sprite(PIXI.Texture.WHITE);\n    background.tint = 0x87ceeb;\n    background.width = clientWidth;\n    background.height = clientHeight;\n    background.cacheAsBitmap = true;\n\n    graphics.clear();\n    drawTiles(graphics, tileGrid, TILE_SIZE);\n\n    stage.addChild(graphics);\n\n    // Update Logic\n    let frames = 0;\n    let stepCount = 0;\n    setUpdater(() => {\n      if (frames++ >= 10 && stepCount < 10) {\n        CaveGenerator.nextStep(\n          tileGrid,\n          stepCount < 4\n            ? {\n                deathLimit: 3,\n                birthLimit: 5,\n                clearSky: true,\n                margin: Math.round(height / 6),\n              }\n            : {\n                deathLimit: 4,\n                birthLimit: 4,\n                clearSky: true,\n                margin: Math.round(height / 6),\n              }\n        );\n\n        graphics.clear();\n        drawTiles(graphics, tileGrid, TILE_SIZE);\n\n        stepCount++;\n        frames = 0;\n\n        if (stepCount === 10) {\n          stage.removeChild(graphics);\n          stage.addChild(background);\n\n          // const tileContainer = new PIXI.Container();\n          const tileContainer = new PIXI.ParticleContainer(width * height, {\n            uvs: true,\n            position: false,\n          });\n          const tileParticleTextures = getTileTextures();\n\n          for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n              if (tileGrid[y][x][0][0]) {\n                const sprite = new PIXI.Sprite(\n                  tileParticleTextures[getTileNumber(x, y, tileGrid)]\n                );\n                sprite.width = TILE_SIZE;\n                sprite.height = TILE_SIZE;\n                sprite.x = x * TILE_SIZE;\n                sprite.y = y * TILE_SIZE;\n                tileContainer.addChild(sprite);\n              } else if (tileGrid[y][x][0][1]) {\n                const sprite = new PIXI.Sprite(\n                  tileGrid[y][x][0][1] === 1\n                    ? tileParticleTextures[60]\n                    : tileParticleTextures[61]\n                );\n                sprite.width = TILE_SIZE;\n                sprite.height = TILE_SIZE;\n                sprite.x = x * TILE_SIZE;\n                sprite.y = y * TILE_SIZE;\n                tileContainer.addChild(sprite);\n              }\n            }\n          }\n\n          stage.addChild(tileContainer);\n          // tileContainer.cacheAsBitmap = true;\n        }\n      }\n    });\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default CaveGenerateWithSky;\n","import { TileProperties } from '../interfaces';\n\nconst MIN_LIQUID_VALUE = 0.005;\nconst MAX_LIQUID_VALUE = 1.0;\nconst MAX_COMPRESSION = 0.125;\nconst MIN_FLOW = 0.005;\nconst MAX_FLOW = 4;\nconst FLOW_SPEED = 0.5;\n\nfunction calculateVerticalFlowValue(\n  remainingLiquid: number,\n  destination: [Uint8Array, Float64Array]\n): number {\n  const sum = remainingLiquid + destination[1][0];\n\n  if (sum <= MAX_LIQUID_VALUE) {\n    return MAX_LIQUID_VALUE;\n  } else if (sum < 2 * MAX_LIQUID_VALUE + MAX_COMPRESSION) {\n    return (\n      (MAX_LIQUID_VALUE * MAX_LIQUID_VALUE + sum * MAX_COMPRESSION) /\n      (MAX_LIQUID_VALUE + MAX_COMPRESSION)\n    );\n  } else {\n    return (sum + MAX_COMPRESSION) / 2;\n  }\n}\n\nfunction* liquidSimulateGenerator(\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  tileGridProperties: Array<Array<TileProperties>>,\n  limitDuration: number\n) {\n  let [accumulate, accumulateLimit] = [0, 5000];\n  let begin = Date.now();\n  let startValue: number;\n  let remainingValue: number;\n  let flow: number = 0;\n  let tile: [Uint8Array, Float64Array];\n\n  for (let y = 0; y < tileGridProperties.length; y++) {\n    for (let x = 0; x < tileGridProperties[0].length; x++) {\n      tileGridProperties[y][x].diff = 0;\n      if (++accumulate > accumulateLimit) {\n        accumulate = 0;\n        if (Date.now() - begin >= limitDuration) begin = yield;\n      }\n    }\n  }\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      tile = tileGrid[y][x];\n      startValue = tile[1][0];\n      remainingValue = tile[1][0];\n      flow = 0;\n\n      if (tile[0][0]) continue;\n      if (tile[1][0] === 0) continue;\n      if (tileGridProperties[y][x].isStable) continue;\n      if (tile[1][0] < MIN_LIQUID_VALUE) {\n        tile[1][0] = 0;\n        continue;\n      }\n\n      if (y < tileGrid.length - 1 && !tileGrid[y + 1][x][0][0]) {\n        flow =\n          calculateVerticalFlowValue(tile[1][0], tileGrid[y + 1][x]) -\n          tileGrid[y + 1][x][1][0];\n\n        if (tileGrid[y + 1][x][1][0] > 0 && flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, tile[1][0]))\n          flow = Math.min(MAX_FLOW, tile[1][0]);\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y + 1][x].diff += flow;\n          tileGridProperties[y + 1][x].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (x > 0 && !tileGrid[y][x - 1][0][0]) {\n        flow = (remainingValue - tileGrid[y][x - 1][1][0]) / 4;\n\n        if (flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue))\n          flow = Math.min(MAX_FLOW, remainingValue);\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y][x - 1].diff += flow;\n          tileGridProperties[y][x - 1].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (x < tileGrid[y].length - 1 && !tileGrid[y][x + 1][0][0]) {\n        flow = (remainingValue - tileGrid[y][x + 1][1][0]) / 3;\n        if (flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue))\n          flow = Math.min(MAX_FLOW, remainingValue);\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y][x + 1].diff += flow;\n          tileGridProperties[y][x + 1].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (y > 0 && !tileGrid[y - 1][x][0][0]) {\n        flow =\n          remainingValue -\n          calculateVerticalFlowValue(remainingValue, tileGrid[y - 1][x]);\n        if (flow > MIN_FLOW) flow *= FLOW_SPEED;\n\n        flow = Math.max(flow, 0);\n        if (flow > Math.min(MAX_FLOW, remainingValue))\n          flow = Math.min(MAX_FLOW, remainingValue);\n\n        if (flow !== 0) {\n          remainingValue -= flow;\n          tileGridProperties[y][x].diff -= flow;\n          tileGridProperties[y - 1][x].diff += flow;\n          tileGridProperties[y - 1][x].isStable = false;\n        }\n      }\n\n      if (remainingValue < MIN_LIQUID_VALUE) {\n        tileGridProperties[y][x].diff -= remainingValue;\n        continue;\n      }\n\n      if (\n        startValue === remainingValue &&\n        ++tileGridProperties[y][x].stableLevel >= 10\n      ) {\n        tileGridProperties[y][x].isStable = true;\n      } else {\n        if (y > 0 && tileGrid[y - 1][x])\n          tileGridProperties[y - 1][x].isStable = false;\n        if (y < tileGrid.length - 1 && tileGrid[y + 1][x])\n          tileGridProperties[y + 1][x].isStable = false;\n        if (x > 0 && tileGrid[y][x - 1])\n          tileGridProperties[y][x - 1].isStable = false;\n        if (x < tileGrid[0].length - 1 && tileGrid[y][x + 1])\n          tileGridProperties[y][x + 1].isStable = false;\n      }\n      if (++accumulate > accumulateLimit) {\n        accumulate = 0;\n        if (Date.now() - begin >= limitDuration) begin = yield;\n      }\n    }\n  }\n\n  for (let y = 0; y < tileGrid.length; y++) {\n    for (let x = 0; x < tileGrid[y].length; x++) {\n      tileGrid[y][x][1][0] += tileGridProperties[y][x].diff;\n      if (tileGrid[y][x][1][0] < MIN_LIQUID_VALUE) {\n        tileGrid[y][x][1][0] = 0;\n      }\n      if (++accumulate > accumulateLimit) {\n        accumulate = 0;\n        if (Date.now() - begin >= limitDuration) begin = yield;\n      }\n    }\n  }\n\n  return;\n}\n\nfunction* stepGenerator(\n  tileGrid: Array<Array<[Uint8Array, Float64Array]>>,\n  tileGridProperties: Array<Array<TileProperties>>,\n  limitDuration: number = 3\n) {\n  let step = liquidSimulateGenerator(\n    tileGrid,\n    tileGridProperties,\n    limitDuration\n  );\n\n  while (true) {\n    if (step.next(Date.now()).done)\n      step = liquidSimulateGenerator(\n        tileGrid,\n        tileGridProperties,\n        limitDuration\n      );\n    yield;\n  }\n}\n\nexport { stepGenerator };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { getClientSize, setRenderer, setUpdater } from '../utils';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport {\n  getTileNumber,\n  getTileTextures,\n  getWaterTextures,\n  getWaterTileNumber,\n} from '../utils/Tile';\nimport { TileProperties } from '../interfaces';\nimport { TILE_SIZE } from '../constants';\n\nconst LiquidSimulation = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {});\n\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        clearHeight: Math.round(height / 4),\n        density: {\n          block: 0.5,\n          liquid: 0.5,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n    const tileGridProperties: Array<Array<TileProperties>> =\n      Map.createTileGridProperties(width, height);\n\n    for (let i = 0; i < 10; i++) {\n      CaveGenerator.nextStep(\n        tileGrid,\n        i < 4\n          ? {\n              deathLimit: 3,\n              birthLimit: 5,\n              clearSky: true,\n              margin: Math.round(height / 6),\n            }\n          : {\n              deathLimit: 4,\n              birthLimit: 4,\n              clearSky: true,\n              margin: Math.round(height / 6),\n            }\n      );\n    }\n\n    // Rendering\n    const { stage } = setRenderer();\n    // const tileContainer = new PIXI.Container();\n    const tileContainer = new PIXI.ParticleContainer(width * height, {\n      uvs: true,\n      position: false,\n    });\n    const waterContainer = new PIXI.ParticleContainer(width * height, {\n      uvs: true,\n      position: false,\n      alpha: true,\n    });\n    const tileParticleTextures = getTileTextures();\n    const waterParticleTextures = getWaterTextures();\n    const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n      .fill(true)\n      .map(() => new Array(width));\n    const background = new PIXI.Sprite(PIXI.Texture.WHITE);\n    background.tint = 0x87ceeb;\n    background.width = clientWidth;\n    background.height = clientHeight;\n    background.cacheAsBitmap = true;\n    stage.addChild(background);\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (tileGrid[y][x][0][0]) {\n          const sprite = new PIXI.Sprite(\n            tileParticleTextures[getTileNumber(x, y, tileGrid)]\n          );\n          sprite.width = TILE_SIZE;\n          sprite.height = TILE_SIZE;\n          sprite.x = x * TILE_SIZE;\n          sprite.y = y * TILE_SIZE;\n          tileContainer.addChild(sprite);\n        } else {\n          const waterTileNumber = tileGrid[y][x][1][0]\n            ? getWaterTileNumber(x, y, tileGrid)\n            : 37;\n          const waterSprite = new PIXI.Sprite(\n            waterParticleTextures[waterTileNumber]\n          );\n          waterSprite.width = TILE_SIZE;\n          waterSprite.height = TILE_SIZE;\n          waterSprite.x = x * TILE_SIZE;\n          waterSprite.y = y * TILE_SIZE;\n          tileSprites[y][x] = waterSprite;\n          waterContainer.addChild(waterSprite);\n\n          if (tileGrid[y][x][0][1]) {\n            const sprite = new PIXI.Sprite(\n              tileGrid[y][x][0][1] === 1\n                ? tileParticleTextures[60]\n                : tileParticleTextures[61]\n            );\n            sprite.width = TILE_SIZE;\n            sprite.height = TILE_SIZE;\n            sprite.x = x * TILE_SIZE;\n            sprite.y = y * TILE_SIZE;\n            tileContainer.addChild(sprite);\n          }\n        }\n      }\n    }\n\n    stage.addChild(tileContainer);\n    stage.addChild(waterContainer);\n    // tileContainer.cacheAsBitmap = true;\n\n    // Update Logic\n    const step = LiquidSimulator.stepGenerator(tileGrid, tileGridProperties);\n\n    setUpdater(() => {\n      step.next();\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (tileGrid[y][x][0][0]) continue;\n\n          const waterTileNumber = tileGrid[y][x][1][0]\n            ? getWaterTileNumber(x, y, tileGrid)\n            : 37;\n          tileSprites[y][x].texture = waterParticleTextures[waterTileNumber];\n          tileSprites[y][x].alpha = Math.min(\n            0.4 + tileGrid[y][x][1][0] * 0.1,\n            0.8\n          );\n        }\n      }\n    });\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default LiquidSimulation;\n","import * as PIXI from 'pixi.js';\n\nfunction createLabel(text: string): {\n  container: PIXI.Container;\n  label: PIXI.Text;\n} {\n  const labelContainer = new PIXI.Container();\n  const labelBackground = new PIXI.Graphics();\n  const label = new PIXI.Text(text, {\n    fontSize: 13,\n    fill: 0xffffff,\n  });\n\n  label.x = 1;\n  label.y = 1;\n\n  labelBackground.beginFill(0x000000, 0.5);\n  labelBackground.drawRect(0, 0, label.width + 2, label.height + 2);\n  labelBackground.endFill();\n  labelContainer.addChild(labelBackground);\n  labelContainer.addChild(label);\n\n  return {\n    container: labelContainer,\n    label,\n  };\n}\n\nexport { createLabel };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { getClientSize, setRenderer, setUpdater } from '../utils';\nimport { createLabel } from '../utils/Label';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport {\n  getTileNumber,\n  getTileTextures,\n  getWaterTextures,\n  getWaterTileNumber,\n} from '../utils/Tile';\nimport { TileProperties } from '../interfaces';\nimport { TILE_SIZE } from '../constants';\n\nconst LiquidSimulation2 = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        clearHeight: Math.round(height / 4),\n        density: {\n          block: 0.5,\n          liquid: 0,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n    const tileGridProperties: Array<Array<TileProperties>> =\n      Map.createTileGridProperties(width, height);\n\n    for (let i = 0; i < 10; i++) {\n      CaveGenerator.nextStep(\n        tileGrid,\n        i < 4\n          ? {\n              deathLimit: 3,\n              birthLimit: 5,\n              clearSky: true,\n              margin: Math.round(height / 6),\n            }\n          : {\n              deathLimit: 4,\n              birthLimit: 4,\n              clearSky: true,\n              margin: Math.round(height / 6),\n            }\n      );\n    }\n\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {\n      const [x, y] = [Math.floor(_x / TILE_SIZE), Math.floor(_y / TILE_SIZE)];\n\n      for (let offsetY = -3; offsetY <= 3; offsetY++) {\n        for (let offsetX = -3; offsetX <= 3; offsetX++) {\n          if (\n            x + offsetX >= 0 &&\n            x + offsetX < width &&\n            y + offsetY >= 0 &&\n            y + offsetY < height &&\n            !tileGrid[y + offsetY][x + offsetX][0][0]\n          ) {\n            tileGrid[y + offsetY][x + offsetX][1][0] += 1;\n          }\n        }\n      }\n    });\n\n    // Rendering\n    const { stage } = setRenderer();\n    const { container: labelContainer } = createLabel('Click to create water');\n    labelContainer.x = Math.round(clientWidth / 2 - labelContainer.width / 2);\n    labelContainer.y = 60;\n\n    // const tileContainer = new PIXI.Container();\n    const tileContainer = new PIXI.ParticleContainer(width * height, {\n      uvs: true,\n      position: false,\n    });\n    const waterContainer = new PIXI.ParticleContainer(width * height, {\n      uvs: true,\n      position: false,\n      alpha: true,\n    });\n    const tileParticleTextures = getTileTextures();\n    const waterParticleTextures = getWaterTextures();\n    const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n      .fill(true)\n      .map(() => new Array(width));\n    const background = new PIXI.Sprite(PIXI.Texture.WHITE);\n    background.tint = 0x87ceeb;\n    background.width = clientWidth;\n    background.height = clientHeight;\n    background.cacheAsBitmap = true;\n    stage.addChild(background);\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (tileGrid[y][x][0][0]) {\n          const sprite = new PIXI.Sprite(\n            tileParticleTextures[getTileNumber(x, y, tileGrid)]\n          );\n          sprite.width = TILE_SIZE;\n          sprite.height = TILE_SIZE;\n          sprite.x = x * TILE_SIZE;\n          sprite.y = y * TILE_SIZE;\n          tileContainer.addChild(sprite);\n        } else {\n          const waterTileNumber = tileGrid[y][x][1][0]\n            ? getWaterTileNumber(x, y, tileGrid)\n            : 37;\n          const waterSprite = new PIXI.Sprite(\n            waterParticleTextures[waterTileNumber]\n          );\n          waterSprite.width = TILE_SIZE;\n          waterSprite.height = TILE_SIZE;\n          waterSprite.x = x * TILE_SIZE;\n          waterSprite.y = y * TILE_SIZE;\n          tileSprites[y][x] = waterSprite;\n          waterContainer.addChild(waterSprite);\n\n          if (tileGrid[y][x][0][1]) {\n            const sprite = new PIXI.Sprite(\n              tileGrid[y][x][0][1] === 1\n                ? tileParticleTextures[60]\n                : tileParticleTextures[61]\n            );\n            sprite.width = TILE_SIZE;\n            sprite.height = TILE_SIZE;\n            sprite.x = x * TILE_SIZE;\n            sprite.y = y * TILE_SIZE;\n            tileContainer.addChild(sprite);\n          }\n        }\n      }\n    }\n\n    stage.addChild(tileContainer);\n    stage.addChild(waterContainer);\n    stage.addChild(labelContainer);\n    // tileContainer.cacheAsBitmap = true;\n\n    // Update Logic\n    const step = LiquidSimulator.stepGenerator(tileGrid, tileGridProperties);\n\n    setUpdater(() => {\n      step.next();\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (tileGrid[y][x][0][0]) continue;\n\n          const waterTileNumber = tileGrid[y][x][1][0]\n            ? getWaterTileNumber(x, y, tileGrid)\n            : 37;\n          tileSprites[y][x].texture = waterParticleTextures[waterTileNumber];\n          tileSprites[y][x].alpha = Math.min(\n            0.4 + tileGrid[y][x][1][0] * 0.1,\n            0.8\n          );\n        }\n      }\n    });\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default LiquidSimulation2;\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { getClientSize, setRenderer, setUpdater } from '../utils';\nimport { createLabel } from '../utils/Label';\nimport * as Map from '../utils/Map';\nimport * as LiquidSimulator from '../utils/LiquidSimulator';\nimport { getWaterTextures, getWaterTileNumber } from '../utils/Tile';\nimport { TileProperties } from '../interfaces';\nimport { TILE_SIZE } from '../constants';\n\nconst LiquidStressTest = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        clearHeight: 0,\n        density: {\n          block: 0,\n          liquid: 1,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n    const tileGridProperties: Array<Array<TileProperties>> =\n      Map.createTileGridProperties(width, height);\n\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {\n      const [x, y] = [Math.floor(_x / TILE_SIZE), Math.floor(_y / TILE_SIZE)];\n\n      for (let offsetY = -5; offsetY <= 5; offsetY++) {\n        for (let offsetX = -5; offsetX <= 5; offsetX++) {\n          if (\n            x + offsetX >= 0 &&\n            x + offsetX < width &&\n            y + offsetY >= 0 &&\n            y + offsetY < height &&\n            !tileGrid[y + offsetY][x + offsetX][0][0]\n          ) {\n            tileGrid[y + offsetY][x + offsetX][1][0] += 1;\n          }\n        }\n      }\n    });\n\n    // Rendering\n    const { stage } = setRenderer();\n    const { container: tileLabelContainer } = createLabel(\n      `${width * height} sprites`\n    );\n    const { container: labelContainer } = createLabel('Click to create water');\n    tileLabelContainer.x = Math.round(\n      clientWidth / 2 - tileLabelContainer.width / 2\n    );\n    tileLabelContainer.y = 60;\n    labelContainer.x = Math.round(clientWidth / 2 - labelContainer.width / 2);\n    labelContainer.y = 80;\n\n    const waterContainer = new PIXI.ParticleContainer(width * height, {\n      uvs: true,\n      position: false,\n    });\n    const waterParticleTextures = getWaterTextures();\n    const tileSprites: Array<Array<PIXI.Sprite>> = new Array(height)\n      .fill(true)\n      .map(() => new Array(width));\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const waterTileNumber = tileGrid[y][x][1][0]\n          ? getWaterTileNumber(x, y, tileGrid)\n          : 37;\n        const waterSprite = new PIXI.Sprite(\n          waterParticleTextures[waterTileNumber]\n        );\n        waterSprite.width = TILE_SIZE;\n        waterSprite.height = TILE_SIZE;\n        waterSprite.x = x * TILE_SIZE;\n        waterSprite.y = y * TILE_SIZE;\n        tileSprites[y][x] = waterSprite;\n        waterContainer.addChild(waterSprite);\n      }\n    }\n\n    stage.addChild(waterContainer);\n    stage.addChild(labelContainer);\n    stage.addChild(tileLabelContainer);\n\n    // Update Logic\n    const step = LiquidSimulator.stepGenerator(tileGrid, tileGridProperties);\n\n    setUpdater(() => {\n      step.next();\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          if (tileGrid[y][x][0][0]) continue;\n\n          const waterTileNumber = tileGrid[y][x][1][0]\n            ? getWaterTileNumber(x, y, tileGrid)\n            : 37;\n          tileSprites[y][x].texture = waterParticleTextures[waterTileNumber];\n          tileSprites[y][x].alpha = Math.min(\n            0.4 + tileGrid[y][x][1][0] * 0.1,\n            0.8\n          );\n        }\n      }\n    });\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default LiquidStressTest;\n","import { Line } from '../interfaces';\n\nfunction lineIntersection(lineA: Line, lineB: Line): number {\n  const det =\n    (lineA[1][0] - lineA[0][0]) * (lineB[1][1] - lineB[0][1]) -\n    (lineB[1][0] - lineB[0][0]) * (lineA[1][1] - lineA[0][1]);\n\n  if (det === 0) {\n    return -1;\n  } else {\n    const t1 =\n      ((lineB[1][1] - lineB[0][1]) * (lineB[1][0] - lineA[0][0]) +\n        (lineB[0][0] - lineB[1][0]) * (lineB[1][1] - lineA[0][1])) /\n      det;\n    const t2 =\n      ((lineA[0][1] - lineA[1][1]) * (lineB[1][0] - lineA[0][0]) +\n        (lineA[1][0] - lineA[0][0]) * (lineB[1][1] - lineA[0][1])) /\n      det;\n\n    return 0 <= t1 && t1 <= 1 && 0 <= t2 && t2 <= 1 ? t1 : -1;\n  }\n}\n\nexport { lineIntersection };\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { Line } from '../interfaces';\nimport { getClientSize, setRenderer } from '../utils';\nimport { drawLines, drawPoints } from '../utils/Graphics';\nimport { createLabel } from '../utils/Label';\nimport * as Collision from '../utils/Collision';\n\nconst LineIntersection = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {});\n\n    // Render\n    const [clientWidth, clientHeight] = getClientSize();\n    const { stage } = setRenderer();\n    const graphics = new PIXI.Graphics();\n    const [quarterWidth, quarterHeight] = [\n      Math.floor(clientWidth / 4),\n      Math.floor(clientHeight / 4),\n    ];\n\n    // Lines\n    const lineA: Line = [\n      [quarterWidth, quarterHeight],\n      [quarterWidth * 3, quarterHeight * 3],\n    ];\n    const lineB: Line = [\n      [quarterWidth * 3, quarterHeight],\n      [quarterWidth, quarterHeight * 3],\n    ];\n\n    // Draw Points\n    const points = [...lineA, ...lineB];\n    stage.addChild(graphics);\n\n    for (const point of points) {\n      const { container: pointContainer } = createLabel(`(${point})`);\n      pointContainer.position.set(...point);\n      stage.addChild(pointContainer);\n    }\n\n    graphics.clear();\n    drawLines(graphics, [lineA, lineB], { width: 1, color: 0x009900 });\n    drawPoints(graphics, points, 2);\n\n    // Line Intersection\n    const collisionDt: number = Collision.lineIntersection(lineA, lineB);\n    const collisionPoint: [number, number] = [\n      lineA[0][0] + (lineA[1][0] - lineA[0][0]) * collisionDt,\n      lineA[0][1] + (lineA[1][1] - lineA[0][1]) * collisionDt,\n    ];\n    drawPoints(graphics, [collisionPoint], 4, 0xffaa66);\n\n    const { container: pointContainer } = createLabel(\n      `Intersect at (${collisionPoint[0].toFixed(\n        2\n      )},${collisionPoint[1].toFixed(2)})`\n    );\n    pointContainer.position.set(...collisionPoint);\n    stage.addChild(pointContainer);\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default LineIntersection;\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { SAMPLE_POLYGON } from '../constants';\nimport { Line } from '../interfaces';\nimport { getClientSize, setRenderer, setUpdater } from '../utils';\nimport { drawLines, drawPoints } from '../utils/Graphics';\nimport { createLabel } from '../utils/Label';\nimport * as Collision from '../utils/Collision';\n\nconst LineIntersection2 = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Sample Polygon\n    let dirty = true;\n    const [width, height] = getClientSize();\n    const scale = width < height ? height : width;\n    const polygonLines: Array<Line> = [];\n    const polygon: Array<[number, number]> = SAMPLE_POLYGON.map(([x, y]) => [\n      x * ((scale / 2000) * 900) + width / 2 - (scale / 2000) * 450,\n      y * ((scale / 2000) * 900) + height / 2 - (scale / 2000) * 500,\n    ]);\n\n    for (let i = 0; i < polygon.length - 1; i++) {\n      polygonLines.push([polygon[i], polygon[i + 1]]);\n    }\n\n    // Render\n    const { stage } = setRenderer();\n    const graphics = new PIXI.Graphics();\n    const { container: labelContainer } = createLabel('Click to move line');\n    labelContainer.x = Math.round(width / 2 - labelContainer.width / 2);\n    labelContainer.y = 60;\n\n    stage.addChild(graphics);\n\n    // movable line\n    const movableLine: Line = [\n      [Math.round(width / 2), Math.round(height / 2)],\n      [width, Math.round(height / 2)],\n    ];\n    const { container: beginContainer } = createLabel(`(${movableLine[0]})`);\n    const { container: endContainer, label: endLabel } = createLabel(\n      `(${movableLine[1]})`\n    );\n    stage.addChild(beginContainer);\n    stage.addChild(endContainer);\n    stage.addChild(labelContainer);\n\n    // Set Click Callback\n    setCallback((x: number, y: number) => {\n      endLabel.text = `(${Math.round(x)},${Math.round(y)})`;\n      movableLine[1][0] = x;\n      movableLine[1][1] = y;\n      dirty = true;\n    });\n\n    const collisionPointContainers: Array<PIXI.Container> = [];\n    setUpdater(() => {\n      if (!dirty) return;\n      const collisionPoints: Array<[number, number]> = [];\n\n      // Line Intersection\n      for (const line of polygonLines) {\n        const collisionDt = Collision.lineIntersection(movableLine, line);\n        if (collisionDt >= 0 && collisionDt <= 1) {\n          collisionPoints.push([\n            movableLine[0][0] +\n              (movableLine[1][0] - movableLine[0][0]) * collisionDt,\n            movableLine[0][1] +\n              (movableLine[1][1] - movableLine[0][1]) * collisionDt,\n          ]);\n        }\n      }\n\n      graphics.clear();\n      drawLines(graphics, polygonLines, {\n        width: 2,\n        color: 0x555555,\n        cap: PIXI.LINE_CAP.ROUND,\n      });\n      drawLines(graphics, [movableLine], {\n        width: 1,\n        color: 0x009900,\n      });\n      drawPoints(graphics, movableLine, 2, 0xff0000);\n      drawPoints(graphics, collisionPoints, 4, 0xffaa66);\n\n      for (const collisionPointContainer of collisionPointContainers) {\n        stage.removeChild(collisionPointContainer);\n      }\n\n      for (const collisionPoint of collisionPoints) {\n        const { container: pointContainer } = createLabel(\n          `Intersect at (${Math.round(collisionPoint[0])},${Math.round(\n            collisionPoint[1]\n          )})`\n        );\n        pointContainer.position.set(...collisionPoint);\n        stage.addChild(pointContainer);\n        collisionPointContainers.push(pointContainer);\n      }\n\n      beginContainer.position.set(...movableLine[0]);\n      endContainer.position.set(...movableLine[1]);\n\n      dirty = false;\n    });\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default LineIntersection2;\n","import * as PIXI from 'pixi.js';\nimport { useEffect } from 'react';\nimport { getClientSize, setRenderer } from '../utils';\nimport * as Map from '../utils/Map';\nimport * as CaveGenerator from '../utils/CaveGenerator';\nimport { getTileNumber, getTileTextures } from '../utils/Tile';\nimport { getDefaultLightings } from '../utils/Lighting';\nimport { TILE_SIZE } from '../constants';\n\nconst DefaultLighting = ({\n  setCallback,\n}: {\n  setCallback: (callback: (x: number, y: number) => void) => void;\n}) => {\n  useEffect(() => {\n    // Set Click Callback\n    setCallback((_x: number, _y: number) => {});\n\n    // Buffer Tile Map Generate\n    const [clientWidth, clientHeight] = getClientSize();\n    const width = Math.ceil(clientWidth / TILE_SIZE);\n    const height = Math.ceil(clientHeight / TILE_SIZE);\n    const tileBufferGrids: Array<Array<ArrayBuffer>> = Map.create(\n      width,\n      height,\n      {\n        splitSize: 0,\n        clearHeight: Math.round(height / 4),\n        density: {\n          block: 0.5,\n          liquid: 0.3,\n        },\n      }\n    );\n    const tileGrid: Array<Array<[Uint8Array, Float64Array]>> =\n      Map.merge(tileBufferGrids);\n\n    for (let i = 0; i < 10; i++) {\n      CaveGenerator.nextStep(\n        tileGrid,\n        i < 4\n          ? {\n              deathLimit: 3,\n              birthLimit: 5,\n              clearSky: true,\n              margin: Math.round(height / 6),\n            }\n          : {\n              deathLimit: 4,\n              birthLimit: 4,\n              clearSky: true,\n              margin: Math.round(height / 6),\n            }\n      );\n    }\n\n    // Rendering\n    const { stage, lightContainer } = setRenderer({ defaultLighting: false });\n    // const tileContainer = new PIXI.Container();\n    const tileContainer = new PIXI.ParticleContainer(width * height, {\n      uvs: true,\n      position: false,\n    });\n    const tileParticleTextures = getTileTextures();\n    const background = new PIXI.Sprite(PIXI.Texture.WHITE);\n    const defaultLightingGraphic = new PIXI.Graphics();\n    background.tint = 0x87ceeb;\n    background.width = clientWidth;\n    background.height = clientHeight;\n    background.cacheAsBitmap = true;\n\n    const defaultLightings = getDefaultLightings(\n      width,\n      height,\n      TILE_SIZE,\n      Math.round(height / 3),\n      2 / Math.round((height / 4) * 3)\n    );\n\n    for (const defaultLighting of defaultLightings) {\n      const [area, value] = defaultLighting;\n      defaultLightingGraphic.beginFill(0xffffff, value);\n      defaultLightingGraphic.drawRect(...area[0], ...area[1]);\n      defaultLightingGraphic.endFill();\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (tileGrid[y][x][0][0]) {\n          const sprite = new PIXI.Sprite(\n            tileParticleTextures[getTileNumber(x, y, tileGrid)]\n          );\n          sprite.width = TILE_SIZE;\n          sprite.height = TILE_SIZE;\n          sprite.x = x * TILE_SIZE;\n          sprite.y = y * TILE_SIZE;\n          tileContainer.addChild(sprite);\n        } else if (tileGrid[y][x][0][1]) {\n          const sprite = new PIXI.Sprite(\n            tileGrid[y][x][0][1] === 1\n              ? tileParticleTextures[60]\n              : tileParticleTextures[61]\n          );\n          sprite.width = TILE_SIZE;\n          sprite.height = TILE_SIZE;\n          sprite.x = x * TILE_SIZE;\n          sprite.y = y * TILE_SIZE;\n          tileContainer.addChild(sprite);\n        }\n      }\n    }\n\n    stage.addChild(background);\n    stage.addChild(tileContainer);\n    lightContainer.addChild(defaultLightingGraphic);\n\n    // tileContainer.cacheAsBitmap = true;\n    defaultLightingGraphic.cacheAsBitmap = true;\n  }, [setCallback]);\n\n  return <></>;\n};\n\nexport default DefaultLighting;\n","import { useEffect, useState } from 'react';\nimport { Route } from 'react-router';\nimport { Container } from 'rsuite';\nimport { getClientSize, preload, setRenderer } from './utils';\nimport CreatorTag from './components/CreatorTag';\nimport SideNavigation from './components/SideNavigation';\nimport ProgressBar from './components/ProgressBar';\nimport TilemapWithBuffer from './pages/TilemapWithBuffer';\nimport CaveGenerate from './pages/CaveGenerate';\nimport CaveGenerateWithTexture from './pages/CaveGenerateWithTexture';\nimport CaveGenerateWithSky from './pages/CaveGenerateWithSky';\nimport LiquidSimulation from './pages/LiquidSimulation';\nimport LiquidSimulation2 from './pages/LiquidSimulation2';\nimport LiquidStressTest from './pages/LiquidStressTest';\nimport LineIntersection from './pages/LineIntersection';\nimport LineIntersection2 from './pages/LineIntersection2';\nimport DefaultLighting from './pages/DefaultLighting';\n\nlet callback: (x: number, y: number) => void;\n\nconst App = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [asset, setAsset] = useState('');\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      // Event Listener\n      const onTouch = (e: any) => {\n        const [clientWidth, clientHeight] = getClientSize();\n        const [x, y] = [\n          (e.targetTouches[0].clientX / window.innerWidth) * clientWidth,\n          (e.targetTouches[0].clientY / window.innerHeight) * clientHeight,\n        ];\n        if (callback) callback(x, y);\n      };\n      const onClick = (e: any) => {\n        const [clientWidth, clientHeight] = getClientSize();\n        const [x, y] = [\n          (e.clientX / window.innerWidth) * clientWidth,\n          (e.clientY / window.innerHeight) * clientHeight,\n        ];\n        if (callback) callback(x, y);\n      };\n      window.removeEventListener('touchstart', onTouch);\n      window.removeEventListener('click', onClick);\n      window.addEventListener('touchstart', onTouch);\n      window.addEventListener('click', onClick);\n\n      setHide(false);\n      setRenderer();\n      await preload((percentage: number, assetName: string) => {\n        setPercentage(Math.round(percentage * 100));\n        setAsset(assetName);\n      });\n      setHide(true);\n    })();\n  }, []);\n\n  return (\n    <>\n      <Container style={{ height: '100%' }}>\n        <Container id='content'>\n          {hide && (\n            <Route\n              exact\n              path='/'\n              render={() => (\n                <TilemapWithBuffer setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/cave-generate'\n              render={() => (\n                <CaveGenerate setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/cave-generate-texture'\n              render={() => (\n                <CaveGenerateWithTexture\n                  setCallback={(cb) => (callback = cb)}\n                />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/cave-generate-sky'\n              render={() => (\n                <CaveGenerateWithSky setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/liquid-simulation'\n              render={() => (\n                <LiquidSimulation setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/liquid-simulation-2'\n              render={() => (\n                <LiquidSimulation2 setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/liquid-stress-test'\n              render={() => (\n                <LiquidStressTest setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/line-intersection'\n              render={() => (\n                <LineIntersection setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/line-intersection-2'\n              render={() => (\n                <LineIntersection2 setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          {hide && (\n            <Route\n              exact\n              path='/default-lighting'\n              render={() => (\n                <DefaultLighting setCallback={(cb) => (callback = cb)} />\n              )}\n            />\n          )}\n          <CreatorTag />\n        </Container>\n        <ProgressBar hide={hide} asset={asset} percentage={percentage} />\n        <SideNavigation />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","function getDefaultLightings(\n  width: number,\n  height: number,\n  tileSize: number,\n  lightingHeight: number,\n  lightingDecrease: number,\n  defaultLighting: number = 1\n): Array<[[[number, number], [number, number]], number]> {\n  const lightings: Array<[[[number, number], [number, number]], number]> = [];\n\n  lightings.push([\n    [\n      [0, 0],\n      [width * tileSize, lightingHeight * tileSize],\n    ],\n    defaultLighting,\n  ]);\n\n  for (let y = lightingHeight; y < height; y++) {\n    const value = Math.max(\n      0,\n      defaultLighting - (y - lightingHeight + 1) * lightingDecrease\n    );\n    if (value) {\n      lightings.push([\n        [\n          [0, y * tileSize],\n          [width * tileSize, tileSize],\n        ],\n        value,\n      ]);\n    }\n  }\n\n  return lightings;\n}\n\nexport { getDefaultLightings };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}